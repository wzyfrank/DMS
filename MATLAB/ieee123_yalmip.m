clear;
clc;
close all;

vPF = ieee123_PF();

Zbus = load('Zbus.mat');
Zbus = Zbus.Zbus;
Cbus = load('Cbus.mat');
Cbus = Cbus.Cbus;
loads = load('PQloads.mat');
loads = loads.PQloads;
loads = transpose(loads);
Yloads = load('Yloads.mat');
Yloads = Yloads.Yloads;


% voltage regulator taps 

% voltage regulator: 150R
tapA150R = 1.0 + 0.00625 * 7;
tapB150R = 1.0 + 0.00625 * 7;
tapC150R = 1.0 + 0.00625 * 7;
alpha150R = [tapA150R; tapB150R; tapC150R];
alphaM150R = alpha150R * alpha150R';

% voltage regulator: 9R
tapA9R = 1.0 + 0.00625 * -1;
alpha9R = tapA9R;
alphaM9R = alpha9R * alpha9R';

% voltage regulator: 25R
tapA25R = 1.0 + 0.00625 * 0;
tapC25R = 1.0 + 0.00625 * -1;
alpha25R = [tapA25R; tapC25R];
alphaM25R = alpha25R * alpha25R';

% voltage regulator: 160R
tapA160R = 1.0 + 0.00625 * 8;
tapB160R = 1.0 + 0.00625 * 1;
tapC160R = 1.0 + 0.00625 * 5;
alpha160R = [tapA160R; tapB160R; tapC160R];
alphaM160R = alpha160R * alpha160R';


% Z impedances 
Z12 = Zbus([11],[13]);
Ze12 = convertZ(Z12, [2]);
Z13 = Zbus([12],[14]);
Ze13 = convertZ(Z13, [3]);
Z17 = Zbus([10, 11, 12],[15, 16, 17]);
Ze17 = convertZ(Z17, [1, 2, 3]);
Z34 = Zbus([14],[18]);
Ze34 = convertZ(Z34, [3]);
Z35 = Zbus([14],[19]);
Ze35 = convertZ(Z35, [3]);
Z56 = Zbus([19],[20]);
Ze56 = convertZ(Z56, [3]);
Z78 = Zbus([15, 16, 17],[21, 22, 23]);
Ze78 = convertZ(Z78, [1, 2, 3]);
Z812 = Zbus([22],[24]);
Ze812 = convertZ(Z812, [2]);
Z89 = Zbus([21],[25]);
Ze89 = convertZ(Z89, [1]);
Z813 = Zbus([21, 22, 23],[26, 27, 28]);
Ze813 = convertZ(Z813, [1, 2, 3]);
Z9R14 = Zbus([29],[30]);
Ze9R14 = convertZ(Z9R14, [1]);
Z1334 = Zbus([28],[31]);
Ze1334 = convertZ(Z1334, [3]);
Z1318 = Zbus([26, 27, 28],[32, 33, 34]);
Ze1318 = convertZ(Z1318, [1, 2, 3]);
Z1411 = Zbus([30],[35]);
Ze1411 = convertZ(Z1411, [1]);
Z1410 = Zbus([30],[36]);
Ze1410 = convertZ(Z1410, [1]);
Z1516 = Zbus([37],[38]);
Ze1516 = convertZ(Z1516, [3]);
Z1517 = Zbus([37],[39]);
Ze1517 = convertZ(Z1517, [3]);
Z1819 = Zbus([32],[40]);
Ze1819 = convertZ(Z1819, [1]);
Z1821 = Zbus([32, 33, 34],[41, 42, 43]);
Ze1821 = convertZ(Z1821, [1, 2, 3]);
Z1920 = Zbus([40],[44]);
Ze1920 = convertZ(Z1920, [1]);
Z2122 = Zbus([42],[45]);
Ze2122 = convertZ(Z2122, [2]);
Z2123 = Zbus([41, 42, 43],[46, 47, 48]);
Ze2123 = convertZ(Z2123, [1, 2, 3]);
Z2324 = Zbus([48],[49]);
Ze2324 = convertZ(Z2324, [3]);
Z2325 = Zbus([46, 47, 48],[50, 51, 52]);
Ze2325 = convertZ(Z2325, [1, 2, 3]);
Z25R26 = Zbus([53, 54],[55, 56]);
Ze25R26 = convertZ(Z25R26, [1, 3]);
Z2528 = Zbus([50, 51, 52],[57, 58, 59]);
Ze2528 = convertZ(Z2528, [1, 2, 3]);
Z2627 = Zbus([55, 56],[60, 61]);
Ze2627 = convertZ(Z2627, [1, 3]);
Z2631 = Zbus([56],[62]);
Ze2631 = convertZ(Z2631, [3]);
Z2733 = Zbus([60],[63]);
Ze2733 = convertZ(Z2733, [1]);
Z2829 = Zbus([57, 58, 59],[64, 65, 66]);
Ze2829 = convertZ(Z2829, [1, 2, 3]);
Z2930 = Zbus([64, 65, 66],[67, 68, 69]);
Ze2930 = convertZ(Z2930, [1, 2, 3]);
Z30250 = Zbus([67, 68, 69],[70, 71, 72]);
Ze30250 = convertZ(Z30250, [1, 2, 3]);
Z3132 = Zbus([62],[73]);
Ze3132 = convertZ(Z3132, [3]);
Z3415 = Zbus([31],[37]);
Ze3415 = convertZ(Z3415, [3]);
Z3536 = Zbus([74, 75],[76, 77]);
Ze3536 = convertZ(Z3536, [1, 2]);
Z3540 = Zbus([74, 75, 78],[79, 80, 81]);
Ze3540 = convertZ(Z3540, [1, 2, 3]);
Z3637 = Zbus([76],[82]);
Ze3637 = convertZ(Z3637, [1]);
Z3638 = Zbus([77],[83]);
Ze3638 = convertZ(Z3638, [2]);
Z3839 = Zbus([83],[84]);
Ze3839 = convertZ(Z3839, [2]);
Z4041 = Zbus([81],[85]);
Ze4041 = convertZ(Z4041, [3]);
Z4042 = Zbus([79, 80, 81],[86, 87, 88]);
Ze4042 = convertZ(Z4042, [1, 2, 3]);
Z4243 = Zbus([87],[89]);
Ze4243 = convertZ(Z4243, [2]);
Z4244 = Zbus([86, 87, 88],[90, 91, 92]);
Ze4244 = convertZ(Z4244, [1, 2, 3]);
Z4445 = Zbus([90],[93]);
Ze4445 = convertZ(Z4445, [1]);
Z4447 = Zbus([90, 91, 92],[94, 95, 96]);
Ze4447 = convertZ(Z4447, [1, 2, 3]);
Z4546 = Zbus([93],[97]);
Ze4546 = convertZ(Z4546, [1]);
Z4748 = Zbus([94, 95, 96],[98, 99, 100]);
Ze4748 = convertZ(Z4748, [1, 2, 3]);
Z4749 = Zbus([94, 95, 96],[101, 102, 103]);
Ze4749 = convertZ(Z4749, [1, 2, 3]);
Z4950 = Zbus([101, 102, 103],[104, 105, 106]);
Ze4950 = convertZ(Z4950, [1, 2, 3]);
Z5051 = Zbus([104, 105, 106],[107, 108, 109]);
Ze5051 = convertZ(Z5051, [1, 2, 3]);
Z5253 = Zbus([113, 114, 115],[116, 117, 118]);
Ze5253 = convertZ(Z5253, [1, 2, 3]);
Z5354 = Zbus([116, 117, 118],[119, 120, 121]);
Ze5354 = convertZ(Z5354, [1, 2, 3]);
Z5455 = Zbus([119, 120, 121],[122, 123, 124]);
Ze5455 = convertZ(Z5455, [1, 2, 3]);
Z5457 = Zbus([119, 120, 121],[125, 126, 127]);
Ze5457 = convertZ(Z5457, [1, 2, 3]);
Z5556 = Zbus([122, 123, 124],[128, 129, 130]);
Ze5556 = convertZ(Z5556, [1, 2, 3]);
Z5758 = Zbus([126],[131]);
Ze5758 = convertZ(Z5758, [2]);
Z5760 = Zbus([125, 126, 127],[132, 133, 134]);
Ze5760 = convertZ(Z5760, [1, 2, 3]);
Z5859 = Zbus([131],[135]);
Ze5859 = convertZ(Z5859, [2]);
Z6061 = Zbus([132, 133, 134],[136, 137, 138]);
Ze6061 = convertZ(Z6061, [1, 2, 3]);
Z6062 = Zbus([132, 133, 134],[139, 140, 141]);
Ze6062 = convertZ(Z6062, [1, 2, 3]);
Z6263 = Zbus([139, 140, 141],[142, 143, 144]);
Ze6263 = convertZ(Z6263, [1, 2, 3]);
Z6364 = Zbus([142, 143, 144],[145, 146, 147]);
Ze6364 = convertZ(Z6364, [1, 2, 3]);
Z6465 = Zbus([145, 146, 147],[148, 149, 150]);
Ze6465 = convertZ(Z6465, [1, 2, 3]);
Z6566 = Zbus([148, 149, 150],[151, 152, 153]);
Ze6566 = convertZ(Z6566, [1, 2, 3]);
Z6768 = Zbus([154],[155]);
Ze6768 = convertZ(Z6768, [1]);
Z6772 = Zbus([154, 156, 157],[158, 159, 160]);
Ze6772 = convertZ(Z6772, [1, 2, 3]);
Z6797 = Zbus([154, 156, 157],[161, 162, 163]);
Ze6797 = convertZ(Z6797, [1, 2, 3]);
Z6869 = Zbus([155],[164]);
Ze6869 = convertZ(Z6869, [1]);
Z6970 = Zbus([164],[165]);
Ze6970 = convertZ(Z6970, [1]);
Z7071 = Zbus([165],[166]);
Ze7071 = convertZ(Z7071, [1]);
Z7273 = Zbus([160],[167]);
Ze7273 = convertZ(Z7273, [3]);
Z7276 = Zbus([158, 159, 160],[168, 169, 170]);
Ze7276 = convertZ(Z7276, [1, 2, 3]);
Z7374 = Zbus([167],[171]);
Ze7374 = convertZ(Z7374, [3]);
Z7475 = Zbus([171],[172]);
Ze7475 = convertZ(Z7475, [3]);
Z7677 = Zbus([168, 169, 170],[173, 174, 175]);
Ze7677 = convertZ(Z7677, [1, 2, 3]);
Z7686 = Zbus([168, 169, 170],[176, 177, 178]);
Ze7686 = convertZ(Z7686, [1, 2, 3]);
Z7778 = Zbus([173, 174, 175],[179, 180, 181]);
Ze7778 = convertZ(Z7778, [1, 2, 3]);
Z7879 = Zbus([179, 180, 181],[182, 183, 184]);
Ze7879 = convertZ(Z7879, [1, 2, 3]);
Z7880 = Zbus([179, 180, 181],[185, 186, 187]);
Ze7880 = convertZ(Z7880, [1, 2, 3]);
Z8081 = Zbus([185, 186, 187],[188, 189, 190]);
Ze8081 = convertZ(Z8081, [1, 2, 3]);
Z8182 = Zbus([188, 189, 190],[191, 192, 193]);
Ze8182 = convertZ(Z8182, [1, 2, 3]);
Z8184 = Zbus([190],[194]);
Ze8184 = convertZ(Z8184, [3]);
Z8283 = Zbus([191, 192, 193],[195, 196, 197]);
Ze8283 = convertZ(Z8283, [1, 2, 3]);
Z8485 = Zbus([194],[198]);
Ze8485 = convertZ(Z8485, [3]);
Z8687 = Zbus([176, 177, 178],[199, 200, 201]);
Ze8687 = convertZ(Z8687, [1, 2, 3]);
Z8788 = Zbus([199],[202]);
Ze8788 = convertZ(Z8788, [1]);
Z8789 = Zbus([199, 200, 201],[203, 204, 205]);
Ze8789 = convertZ(Z8789, [1, 2, 3]);
Z8990 = Zbus([204],[206]);
Ze8990 = convertZ(Z8990, [2]);
Z8991 = Zbus([203, 204, 205],[207, 208, 209]);
Ze8991 = convertZ(Z8991, [1, 2, 3]);
Z9192 = Zbus([209],[210]);
Ze9192 = convertZ(Z9192, [3]);
Z9193 = Zbus([207, 208, 209],[211, 212, 213]);
Ze9193 = convertZ(Z9193, [1, 2, 3]);
Z9394 = Zbus([211],[214]);
Ze9394 = convertZ(Z9394, [1]);
Z9395 = Zbus([211, 212, 213],[215, 216, 217]);
Ze9395 = convertZ(Z9395, [1, 2, 3]);
Z9596 = Zbus([216],[218]);
Ze9596 = convertZ(Z9596, [2]);
Z9798 = Zbus([161, 162, 163],[219, 220, 221]);
Ze9798 = convertZ(Z9798, [1, 2, 3]);
Z9899 = Zbus([219, 220, 221],[222, 223, 224]);
Ze9899 = convertZ(Z9899, [1, 2, 3]);
Z99100 = Zbus([222, 223, 224],[225, 226, 227]);
Ze99100 = convertZ(Z99100, [1, 2, 3]);
Z100450 = Zbus([225, 226, 227],[228, 229, 230]);
Ze100450 = convertZ(Z100450, [1, 2, 3]);
Z101102 = Zbus([236],[237]);
Ze101102 = convertZ(Z101102, [3]);
Z101105 = Zbus([234, 235, 236],[238, 239, 240]);
Ze101105 = convertZ(Z101105, [1, 2, 3]);
Z102103 = Zbus([237],[241]);
Ze102103 = convertZ(Z102103, [3]);
Z103104 = Zbus([241],[242]);
Ze103104 = convertZ(Z103104, [3]);
Z105106 = Zbus([239],[243]);
Ze105106 = convertZ(Z105106, [2]);
Z105108 = Zbus([238, 239, 240],[244, 245, 246]);
Ze105108 = convertZ(Z105108, [1, 2, 3]);
Z106107 = Zbus([243],[247]);
Ze106107 = convertZ(Z106107, [2]);
Z108109 = Zbus([244],[248]);
Ze108109 = convertZ(Z108109, [1]);
Z108300 = Zbus([244, 245, 246],[249, 250, 251]);
Ze108300 = convertZ(Z108300, [1, 2, 3]);
Z109110 = Zbus([248],[252]);
Ze109110 = convertZ(Z109110, [1]);
Z110111 = Zbus([252],[253]);
Ze110111 = convertZ(Z110111, [1]);
Z110112 = Zbus([252],[254]);
Ze110112 = convertZ(Z110112, [1]);
Z112113 = Zbus([254],[255]);
Ze112113 = convertZ(Z112113, [1]);
Z113114 = Zbus([255],[256]);
Ze113114 = convertZ(Z113114, [1]);
Z13535 = Zbus([257, 258, 259],[74, 75, 78]);
Ze13535 = convertZ(Z13535, [1, 2, 3]);
Z1491 = Zbus([7, 8, 9],[10, 11, 12]);
Ze1491 = convertZ(Z1491, [1, 2, 3]);
Z15252 = Zbus([260, 261, 262],[113, 114, 115]);
Ze15252 = convertZ(Z15252, [1, 2, 3]);
Z160R67 = Zbus([263, 264, 265],[154, 156, 157]);
Ze160R67 = convertZ(Z160R67, [1, 2, 3]);
Z197101 = Zbus([231, 232, 233],[234, 235, 236]);
Ze197101 = convertZ(Z197101, [1, 2, 3]);
Z51151 = Zbus([107, 108, 109],[110, 111, 112]);
Ze51151 = convertZ(Z51151, [1, 2, 3]);
Z150150R = Zbus([1, 2, 3],[4, 5, 6]);
Ze150150R = convertZ(Z150150R, [1, 2, 3]);
Z99R = Zbus([25],[29]);
Ze99R = convertZ(Z99R, [1]);
Z2525R = Zbus([50, 52],[53, 54]);
Ze2525R = convertZ(Z2525R, [1, 3]);
Z160160R = Zbus([266, 267, 268],[263, 264, 265]);
Ze160160R = convertZ(Z160160R, [1, 2, 3]);
Z61S610 = Zbus([269, 270, 271],[276, 277, 278]);
Ze61S610 = convertZ(Z61S610, [1, 2, 3]);
Z150R149 = Zbus([4, 5, 6],[7, 8, 9]);
Ze150R149 = convertZ(Z150R149, [1, 2, 3]);
Z13152 = Zbus([26, 27, 28],[260, 261, 262]);
Ze13152 = convertZ(Z13152, [1, 2, 3]);
Z18135 = Zbus([32, 33, 34],[257, 258, 259]);
Ze18135 = convertZ(Z18135, [1, 2, 3]);
Z60160 = Zbus([132, 133, 134],[266, 267, 268]);
Ze60160 = convertZ(Z60160, [1, 2, 3]);
Z97197 = Zbus([161, 162, 163],[231, 232, 233]);
Ze97197 = convertZ(Z97197, [1, 2, 3]);
Z6161S = Zbus([136, 137, 138],[269, 270, 271]);
Ze6161S = convertZ(Z6161S, [1, 2, 3]);
Z151300_OPEN = Zbus([110, 111, 112],[272, 273, 274]);
Ze151300_OPEN = convertZ(Z151300_OPEN, [1, 2, 3]);
Z5494_OPEN = Zbus([119],[275]);
Ze5494_OPEN = convertZ(Z5494_OPEN, [1]);


% three phase voltage at slack bus
Vbase = 4160 / sqrt(3);
v0 =1.0 * Vbase * [1; cosd(-120) + 1j * sind(-120); cosd(120) + 1j * sind(120)];
% voltage upper and lower bounds
V_lb = 0.9 * Vbase;
V_ub = 1.05 * Vbase;
v_lb = V_lb * V_lb;
v_ub = V_ub * V_ub;




% voltage square variables
v2 = sdpvar(1,1, 'hermitian', 'complex');
v3 = sdpvar(1,1, 'hermitian', 'complex');
v7 = sdpvar(3,3, 'hermitian', 'complex');
v4 = sdpvar(1,1, 'hermitian', 'complex');
v5 = sdpvar(1,1, 'hermitian', 'complex');
v6 = sdpvar(1,1, 'hermitian', 'complex');
v8 = sdpvar(3,3, 'hermitian', 'complex');
v12 = sdpvar(1,1, 'hermitian', 'complex');
v9 = sdpvar(1,1, 'hermitian', 'complex');
v13 = sdpvar(3,3, 'hermitian', 'complex');
v14 = sdpvar(1,1, 'hermitian', 'complex');
v34 = sdpvar(1,1, 'hermitian', 'complex');
v18 = sdpvar(3,3, 'hermitian', 'complex');
v11 = sdpvar(1,1, 'hermitian', 'complex');
v10 = sdpvar(1,1, 'hermitian', 'complex');
v16 = sdpvar(1,1, 'hermitian', 'complex');
v17 = sdpvar(1,1, 'hermitian', 'complex');
v19 = sdpvar(1,1, 'hermitian', 'complex');
v21 = sdpvar(3,3, 'hermitian', 'complex');
v20 = sdpvar(1,1, 'hermitian', 'complex');
v22 = sdpvar(1,1, 'hermitian', 'complex');
v23 = sdpvar(3,3, 'hermitian', 'complex');
v24 = sdpvar(1,1, 'hermitian', 'complex');
v25 = sdpvar(3,3, 'hermitian', 'complex');
v26 = sdpvar(2,2, 'hermitian', 'complex');
v28 = sdpvar(3,3, 'hermitian', 'complex');
v27 = sdpvar(2,2, 'hermitian', 'complex');
v31 = sdpvar(1,1, 'hermitian', 'complex');
v33 = sdpvar(1,1, 'hermitian', 'complex');
v29 = sdpvar(3,3, 'hermitian', 'complex');
v30 = sdpvar(3,3, 'hermitian', 'complex');
v250 = sdpvar(3,3, 'hermitian', 'complex');
v32 = sdpvar(1,1, 'hermitian', 'complex');
v15 = sdpvar(1,1, 'hermitian', 'complex');
v36 = sdpvar(2,2, 'hermitian', 'complex');
v40 = sdpvar(3,3, 'hermitian', 'complex');
v37 = sdpvar(1,1, 'hermitian', 'complex');
v38 = sdpvar(1,1, 'hermitian', 'complex');
v39 = sdpvar(1,1, 'hermitian', 'complex');
v41 = sdpvar(1,1, 'hermitian', 'complex');
v42 = sdpvar(3,3, 'hermitian', 'complex');
v43 = sdpvar(1,1, 'hermitian', 'complex');
v44 = sdpvar(3,3, 'hermitian', 'complex');
v45 = sdpvar(1,1, 'hermitian', 'complex');
v47 = sdpvar(3,3, 'hermitian', 'complex');
v46 = sdpvar(1,1, 'hermitian', 'complex');
v48 = sdpvar(3,3, 'hermitian', 'complex');
v49 = sdpvar(3,3, 'hermitian', 'complex');
v50 = sdpvar(3,3, 'hermitian', 'complex');
v51 = sdpvar(3,3, 'hermitian', 'complex');
v53 = sdpvar(3,3, 'hermitian', 'complex');
v54 = sdpvar(3,3, 'hermitian', 'complex');
v55 = sdpvar(3,3, 'hermitian', 'complex');
v57 = sdpvar(3,3, 'hermitian', 'complex');
v56 = sdpvar(3,3, 'hermitian', 'complex');
v58 = sdpvar(1,1, 'hermitian', 'complex');
v60 = sdpvar(3,3, 'hermitian', 'complex');
v59 = sdpvar(1,1, 'hermitian', 'complex');
v61 = sdpvar(3,3, 'hermitian', 'complex');
v62 = sdpvar(3,3, 'hermitian', 'complex');
v63 = sdpvar(3,3, 'hermitian', 'complex');
v64 = sdpvar(3,3, 'hermitian', 'complex');
v65 = sdpvar(3,3, 'hermitian', 'complex');
v66 = sdpvar(3,3, 'hermitian', 'complex');
v68 = sdpvar(1,1, 'hermitian', 'complex');
v72 = sdpvar(3,3, 'hermitian', 'complex');
v97 = sdpvar(3,3, 'hermitian', 'complex');
v69 = sdpvar(1,1, 'hermitian', 'complex');
v70 = sdpvar(1,1, 'hermitian', 'complex');
v71 = sdpvar(1,1, 'hermitian', 'complex');
v73 = sdpvar(1,1, 'hermitian', 'complex');
v76 = sdpvar(3,3, 'hermitian', 'complex');
v74 = sdpvar(1,1, 'hermitian', 'complex');
v75 = sdpvar(1,1, 'hermitian', 'complex');
v77 = sdpvar(3,3, 'hermitian', 'complex');
v86 = sdpvar(3,3, 'hermitian', 'complex');
v78 = sdpvar(3,3, 'hermitian', 'complex');
v79 = sdpvar(3,3, 'hermitian', 'complex');
v80 = sdpvar(3,3, 'hermitian', 'complex');
v81 = sdpvar(3,3, 'hermitian', 'complex');
v82 = sdpvar(3,3, 'hermitian', 'complex');
v84 = sdpvar(1,1, 'hermitian', 'complex');
v83 = sdpvar(3,3, 'hermitian', 'complex');
v85 = sdpvar(1,1, 'hermitian', 'complex');
v87 = sdpvar(3,3, 'hermitian', 'complex');
v88 = sdpvar(1,1, 'hermitian', 'complex');
v89 = sdpvar(3,3, 'hermitian', 'complex');
v90 = sdpvar(1,1, 'hermitian', 'complex');
v91 = sdpvar(3,3, 'hermitian', 'complex');
v92 = sdpvar(1,1, 'hermitian', 'complex');
v93 = sdpvar(3,3, 'hermitian', 'complex');
v94 = sdpvar(1,1, 'hermitian', 'complex');
v95 = sdpvar(3,3, 'hermitian', 'complex');
v96 = sdpvar(1,1, 'hermitian', 'complex');
v98 = sdpvar(3,3, 'hermitian', 'complex');
v99 = sdpvar(3,3, 'hermitian', 'complex');
v100 = sdpvar(3,3, 'hermitian', 'complex');
v450 = sdpvar(3,3, 'hermitian', 'complex');
v102 = sdpvar(1,1, 'hermitian', 'complex');
v105 = sdpvar(3,3, 'hermitian', 'complex');
v103 = sdpvar(1,1, 'hermitian', 'complex');
v104 = sdpvar(1,1, 'hermitian', 'complex');
v106 = sdpvar(1,1, 'hermitian', 'complex');
v108 = sdpvar(3,3, 'hermitian', 'complex');
v107 = sdpvar(1,1, 'hermitian', 'complex');
v109 = sdpvar(1,1, 'hermitian', 'complex');
v300 = sdpvar(3,3, 'hermitian', 'complex');
v110 = sdpvar(1,1, 'hermitian', 'complex');
v111 = sdpvar(1,1, 'hermitian', 'complex');
v112 = sdpvar(1,1, 'hermitian', 'complex');
v113 = sdpvar(1,1, 'hermitian', 'complex');
v114 = sdpvar(1,1, 'hermitian', 'complex');
v35 = sdpvar(3,3, 'hermitian', 'complex');
v1 = sdpvar(3,3, 'hermitian', 'complex');
v52 = sdpvar(3,3, 'hermitian', 'complex');
v67 = sdpvar(3,3, 'hermitian', 'complex');
v101 = sdpvar(3,3, 'hermitian', 'complex');
v151 = sdpvar(3,3, 'hermitian', 'complex');
v150R = sdpvar(3,3, 'hermitian', 'complex');
v9R = sdpvar(1,1, 'hermitian', 'complex');
v25R = sdpvar(2,2, 'hermitian', 'complex');
v160R = sdpvar(3,3, 'hermitian', 'complex');
v610 = sdpvar(3,3, 'hermitian', 'complex');
v149 = sdpvar(3,3, 'hermitian', 'complex');
v152 = sdpvar(3,3, 'hermitian', 'complex');
v135 = sdpvar(3,3, 'hermitian', 'complex');
v160 = sdpvar(3,3, 'hermitian', 'complex');
v197 = sdpvar(3,3, 'hermitian', 'complex');
v61S = sdpvar(3,3, 'hermitian', 'complex');
v300_OPEN = sdpvar(3,3, 'hermitian', 'complex');
v94_OPEN = sdpvar(1,1, 'hermitian', 'complex');
v150 = sdpvar(3,3,'hermitian', 'complex');

% complex power variables
S12 = sdpvar(1,1, 'full', 'complex');
S13 = sdpvar(1,1, 'full', 'complex');
S17 = sdpvar(3,3, 'full', 'complex');
S34 = sdpvar(1,1, 'full', 'complex');
S35 = sdpvar(1,1, 'full', 'complex');
S56 = sdpvar(1,1, 'full', 'complex');
S78 = sdpvar(3,3, 'full', 'complex');
S812 = sdpvar(1,1, 'full', 'complex');
S89 = sdpvar(1,1, 'full', 'complex');
S813 = sdpvar(3,3, 'full', 'complex');
S9R14 = sdpvar(1,1, 'full', 'complex');
S1334 = sdpvar(1,1, 'full', 'complex');
S1318 = sdpvar(3,3, 'full', 'complex');
S1411 = sdpvar(1,1, 'full', 'complex');
S1410 = sdpvar(1,1, 'full', 'complex');
S1516 = sdpvar(1,1, 'full', 'complex');
S1517 = sdpvar(1,1, 'full', 'complex');
S1819 = sdpvar(1,1, 'full', 'complex');
S1821 = sdpvar(3,3, 'full', 'complex');
S1920 = sdpvar(1,1, 'full', 'complex');
S2122 = sdpvar(1,1, 'full', 'complex');
S2123 = sdpvar(3,3, 'full', 'complex');
S2324 = sdpvar(1,1, 'full', 'complex');
S2325 = sdpvar(3,3, 'full', 'complex');
S25R26 = sdpvar(2,2, 'full', 'complex');
S2528 = sdpvar(3,3, 'full', 'complex');
S2627 = sdpvar(2,2, 'full', 'complex');
S2631 = sdpvar(1,1, 'full', 'complex');
S2733 = sdpvar(1,1, 'full', 'complex');
S2829 = sdpvar(3,3, 'full', 'complex');
S2930 = sdpvar(3,3, 'full', 'complex');
S30250 = sdpvar(3,3, 'full', 'complex');
S3132 = sdpvar(1,1, 'full', 'complex');
S3415 = sdpvar(1,1, 'full', 'complex');
S3536 = sdpvar(2,2, 'full', 'complex');
S3540 = sdpvar(3,3, 'full', 'complex');
S3637 = sdpvar(1,1, 'full', 'complex');
S3638 = sdpvar(1,1, 'full', 'complex');
S3839 = sdpvar(1,1, 'full', 'complex');
S4041 = sdpvar(1,1, 'full', 'complex');
S4042 = sdpvar(3,3, 'full', 'complex');
S4243 = sdpvar(1,1, 'full', 'complex');
S4244 = sdpvar(3,3, 'full', 'complex');
S4445 = sdpvar(1,1, 'full', 'complex');
S4447 = sdpvar(3,3, 'full', 'complex');
S4546 = sdpvar(1,1, 'full', 'complex');
S4748 = sdpvar(3,3, 'full', 'complex');
S4749 = sdpvar(3,3, 'full', 'complex');
S4950 = sdpvar(3,3, 'full', 'complex');
S5051 = sdpvar(3,3, 'full', 'complex');
S5253 = sdpvar(3,3, 'full', 'complex');
S5354 = sdpvar(3,3, 'full', 'complex');
S5455 = sdpvar(3,3, 'full', 'complex');
S5457 = sdpvar(3,3, 'full', 'complex');
S5556 = sdpvar(3,3, 'full', 'complex');
S5758 = sdpvar(1,1, 'full', 'complex');
S5760 = sdpvar(3,3, 'full', 'complex');
S5859 = sdpvar(1,1, 'full', 'complex');
S6061 = sdpvar(3,3, 'full', 'complex');
S6062 = sdpvar(3,3, 'full', 'complex');
S6263 = sdpvar(3,3, 'full', 'complex');
S6364 = sdpvar(3,3, 'full', 'complex');
S6465 = sdpvar(3,3, 'full', 'complex');
S6566 = sdpvar(3,3, 'full', 'complex');
S6768 = sdpvar(1,1, 'full', 'complex');
S6772 = sdpvar(3,3, 'full', 'complex');
S6797 = sdpvar(3,3, 'full', 'complex');
S6869 = sdpvar(1,1, 'full', 'complex');
S6970 = sdpvar(1,1, 'full', 'complex');
S7071 = sdpvar(1,1, 'full', 'complex');
S7273 = sdpvar(1,1, 'full', 'complex');
S7276 = sdpvar(3,3, 'full', 'complex');
S7374 = sdpvar(1,1, 'full', 'complex');
S7475 = sdpvar(1,1, 'full', 'complex');
S7677 = sdpvar(3,3, 'full', 'complex');
S7686 = sdpvar(3,3, 'full', 'complex');
S7778 = sdpvar(3,3, 'full', 'complex');
S7879 = sdpvar(3,3, 'full', 'complex');
S7880 = sdpvar(3,3, 'full', 'complex');
S8081 = sdpvar(3,3, 'full', 'complex');
S8182 = sdpvar(3,3, 'full', 'complex');
S8184 = sdpvar(1,1, 'full', 'complex');
S8283 = sdpvar(3,3, 'full', 'complex');
S8485 = sdpvar(1,1, 'full', 'complex');
S8687 = sdpvar(3,3, 'full', 'complex');
S8788 = sdpvar(1,1, 'full', 'complex');
S8789 = sdpvar(3,3, 'full', 'complex');
S8990 = sdpvar(1,1, 'full', 'complex');
S8991 = sdpvar(3,3, 'full', 'complex');
S9192 = sdpvar(1,1, 'full', 'complex');
S9193 = sdpvar(3,3, 'full', 'complex');
S9394 = sdpvar(1,1, 'full', 'complex');
S9395 = sdpvar(3,3, 'full', 'complex');
S9596 = sdpvar(1,1, 'full', 'complex');
S9798 = sdpvar(3,3, 'full', 'complex');
S9899 = sdpvar(3,3, 'full', 'complex');
S99100 = sdpvar(3,3, 'full', 'complex');
S100450 = sdpvar(3,3, 'full', 'complex');
S101102 = sdpvar(1,1, 'full', 'complex');
S101105 = sdpvar(3,3, 'full', 'complex');
S102103 = sdpvar(1,1, 'full', 'complex');
S103104 = sdpvar(1,1, 'full', 'complex');
S105106 = sdpvar(1,1, 'full', 'complex');
S105108 = sdpvar(3,3, 'full', 'complex');
S106107 = sdpvar(1,1, 'full', 'complex');
S108109 = sdpvar(1,1, 'full', 'complex');
S108300 = sdpvar(3,3, 'full', 'complex');
S109110 = sdpvar(1,1, 'full', 'complex');
S110111 = sdpvar(1,1, 'full', 'complex');
S110112 = sdpvar(1,1, 'full', 'complex');
S112113 = sdpvar(1,1, 'full', 'complex');
S113114 = sdpvar(1,1, 'full', 'complex');
S13535 = sdpvar(3,3, 'full', 'complex');
S1491 = sdpvar(3,3, 'full', 'complex');
S15252 = sdpvar(3,3, 'full', 'complex');
S160R67 = sdpvar(3,3, 'full', 'complex');
S197101 = sdpvar(3,3, 'full', 'complex');
S51151 = sdpvar(3,3, 'full', 'complex');
S150150R = sdpvar(3,3, 'full', 'complex');
S99R = sdpvar(1,1, 'full', 'complex');
S2525R = sdpvar(2,2, 'full', 'complex');
S160160R = sdpvar(3,3, 'full', 'complex');
S61S610 = sdpvar(3,3, 'full', 'complex');
S150R149 = sdpvar(3,3, 'full', 'complex');
S13152 = sdpvar(3,3, 'full', 'complex');
S18135 = sdpvar(3,3, 'full', 'complex');
S60160 = sdpvar(3,3, 'full', 'complex');
S97197 = sdpvar(3,3, 'full', 'complex');
S6161S = sdpvar(3,3, 'full', 'complex');
S151300_OPEN = sdpvar(3,3, 'full', 'complex');
S5494_OPEN = sdpvar(1,1, 'full', 'complex');

% current square variables
l12 = sdpvar(1,1, 'hermitian', 'complex');
l13 = sdpvar(1,1, 'hermitian', 'complex');
l17 = sdpvar(3,3, 'hermitian', 'complex');
l34 = sdpvar(1,1, 'hermitian', 'complex');
l35 = sdpvar(1,1, 'hermitian', 'complex');
l56 = sdpvar(1,1, 'hermitian', 'complex');
l78 = sdpvar(3,3, 'hermitian', 'complex');
l812 = sdpvar(1,1, 'hermitian', 'complex');
l89 = sdpvar(1,1, 'hermitian', 'complex');
l813 = sdpvar(3,3, 'hermitian', 'complex');
l9R14 = sdpvar(1,1, 'hermitian', 'complex');
l1334 = sdpvar(1,1, 'hermitian', 'complex');
l1318 = sdpvar(3,3, 'hermitian', 'complex');
l1411 = sdpvar(1,1, 'hermitian', 'complex');
l1410 = sdpvar(1,1, 'hermitian', 'complex');
l1516 = sdpvar(1,1, 'hermitian', 'complex');
l1517 = sdpvar(1,1, 'hermitian', 'complex');
l1819 = sdpvar(1,1, 'hermitian', 'complex');
l1821 = sdpvar(3,3, 'hermitian', 'complex');
l1920 = sdpvar(1,1, 'hermitian', 'complex');
l2122 = sdpvar(1,1, 'hermitian', 'complex');
l2123 = sdpvar(3,3, 'hermitian', 'complex');
l2324 = sdpvar(1,1, 'hermitian', 'complex');
l2325 = sdpvar(3,3, 'hermitian', 'complex');
l25R26 = sdpvar(2,2, 'hermitian', 'complex');
l2528 = sdpvar(3,3, 'hermitian', 'complex');
l2627 = sdpvar(2,2, 'hermitian', 'complex');
l2631 = sdpvar(1,1, 'hermitian', 'complex');
l2733 = sdpvar(1,1, 'hermitian', 'complex');
l2829 = sdpvar(3,3, 'hermitian', 'complex');
l2930 = sdpvar(3,3, 'hermitian', 'complex');
l30250 = sdpvar(3,3, 'hermitian', 'complex');
l3132 = sdpvar(1,1, 'hermitian', 'complex');
l3415 = sdpvar(1,1, 'hermitian', 'complex');
l3536 = sdpvar(2,2, 'hermitian', 'complex');
l3540 = sdpvar(3,3, 'hermitian', 'complex');
l3637 = sdpvar(1,1, 'hermitian', 'complex');
l3638 = sdpvar(1,1, 'hermitian', 'complex');
l3839 = sdpvar(1,1, 'hermitian', 'complex');
l4041 = sdpvar(1,1, 'hermitian', 'complex');
l4042 = sdpvar(3,3, 'hermitian', 'complex');
l4243 = sdpvar(1,1, 'hermitian', 'complex');
l4244 = sdpvar(3,3, 'hermitian', 'complex');
l4445 = sdpvar(1,1, 'hermitian', 'complex');
l4447 = sdpvar(3,3, 'hermitian', 'complex');
l4546 = sdpvar(1,1, 'hermitian', 'complex');
l4748 = sdpvar(3,3, 'hermitian', 'complex');
l4749 = sdpvar(3,3, 'hermitian', 'complex');
l4950 = sdpvar(3,3, 'hermitian', 'complex');
l5051 = sdpvar(3,3, 'hermitian', 'complex');
l5253 = sdpvar(3,3, 'hermitian', 'complex');
l5354 = sdpvar(3,3, 'hermitian', 'complex');
l5455 = sdpvar(3,3, 'hermitian', 'complex');
l5457 = sdpvar(3,3, 'hermitian', 'complex');
l5556 = sdpvar(3,3, 'hermitian', 'complex');
l5758 = sdpvar(1,1, 'hermitian', 'complex');
l5760 = sdpvar(3,3, 'hermitian', 'complex');
l5859 = sdpvar(1,1, 'hermitian', 'complex');
l6061 = sdpvar(3,3, 'hermitian', 'complex');
l6062 = sdpvar(3,3, 'hermitian', 'complex');
l6263 = sdpvar(3,3, 'hermitian', 'complex');
l6364 = sdpvar(3,3, 'hermitian', 'complex');
l6465 = sdpvar(3,3, 'hermitian', 'complex');
l6566 = sdpvar(3,3, 'hermitian', 'complex');
l6768 = sdpvar(1,1, 'hermitian', 'complex');
l6772 = sdpvar(3,3, 'hermitian', 'complex');
l6797 = sdpvar(3,3, 'hermitian', 'complex');
l6869 = sdpvar(1,1, 'hermitian', 'complex');
l6970 = sdpvar(1,1, 'hermitian', 'complex');
l7071 = sdpvar(1,1, 'hermitian', 'complex');
l7273 = sdpvar(1,1, 'hermitian', 'complex');
l7276 = sdpvar(3,3, 'hermitian', 'complex');
l7374 = sdpvar(1,1, 'hermitian', 'complex');
l7475 = sdpvar(1,1, 'hermitian', 'complex');
l7677 = sdpvar(3,3, 'hermitian', 'complex');
l7686 = sdpvar(3,3, 'hermitian', 'complex');
l7778 = sdpvar(3,3, 'hermitian', 'complex');
l7879 = sdpvar(3,3, 'hermitian', 'complex');
l7880 = sdpvar(3,3, 'hermitian', 'complex');
l8081 = sdpvar(3,3, 'hermitian', 'complex');
l8182 = sdpvar(3,3, 'hermitian', 'complex');
l8184 = sdpvar(1,1, 'hermitian', 'complex');
l8283 = sdpvar(3,3, 'hermitian', 'complex');
l8485 = sdpvar(1,1, 'hermitian', 'complex');
l8687 = sdpvar(3,3, 'hermitian', 'complex');
l8788 = sdpvar(1,1, 'hermitian', 'complex');
l8789 = sdpvar(3,3, 'hermitian', 'complex');
l8990 = sdpvar(1,1, 'hermitian', 'complex');
l8991 = sdpvar(3,3, 'hermitian', 'complex');
l9192 = sdpvar(1,1, 'hermitian', 'complex');
l9193 = sdpvar(3,3, 'hermitian', 'complex');
l9394 = sdpvar(1,1, 'hermitian', 'complex');
l9395 = sdpvar(3,3, 'hermitian', 'complex');
l9596 = sdpvar(1,1, 'hermitian', 'complex');
l9798 = sdpvar(3,3, 'hermitian', 'complex');
l9899 = sdpvar(3,3, 'hermitian', 'complex');
l99100 = sdpvar(3,3, 'hermitian', 'complex');
l100450 = sdpvar(3,3, 'hermitian', 'complex');
l101102 = sdpvar(1,1, 'hermitian', 'complex');
l101105 = sdpvar(3,3, 'hermitian', 'complex');
l102103 = sdpvar(1,1, 'hermitian', 'complex');
l103104 = sdpvar(1,1, 'hermitian', 'complex');
l105106 = sdpvar(1,1, 'hermitian', 'complex');
l105108 = sdpvar(3,3, 'hermitian', 'complex');
l106107 = sdpvar(1,1, 'hermitian', 'complex');
l108109 = sdpvar(1,1, 'hermitian', 'complex');
l108300 = sdpvar(3,3, 'hermitian', 'complex');
l109110 = sdpvar(1,1, 'hermitian', 'complex');
l110111 = sdpvar(1,1, 'hermitian', 'complex');
l110112 = sdpvar(1,1, 'hermitian', 'complex');
l112113 = sdpvar(1,1, 'hermitian', 'complex');
l113114 = sdpvar(1,1, 'hermitian', 'complex');
l13535 = sdpvar(3,3, 'hermitian', 'complex');
l1491 = sdpvar(3,3, 'hermitian', 'complex');
l15252 = sdpvar(3,3, 'hermitian', 'complex');
l160R67 = sdpvar(3,3, 'hermitian', 'complex');
l197101 = sdpvar(3,3, 'hermitian', 'complex');
l51151 = sdpvar(3,3, 'hermitian', 'complex');
l150150R = sdpvar(3,3, 'hermitian', 'complex');
l99R = sdpvar(1,1, 'hermitian', 'complex');
l2525R = sdpvar(2,2, 'hermitian', 'complex');
l160160R = sdpvar(3,3, 'hermitian', 'complex');
l61S610 = sdpvar(3,3, 'hermitian', 'complex');
l150R149 = sdpvar(3,3, 'hermitian', 'complex');
l13152 = sdpvar(3,3, 'hermitian', 'complex');
l18135 = sdpvar(3,3, 'hermitian', 'complex');
l60160 = sdpvar(3,3, 'hermitian', 'complex');
l97197 = sdpvar(3,3, 'hermitian', 'complex');
l6161S = sdpvar(3,3, 'hermitian', 'complex');
l151300_OPEN = sdpvar(3,3, 'hermitian', 'complex');
l5494_OPEN = sdpvar(1,1, 'hermitian', 'complex');

% DER variables
DER83 = sdpvar(3, 1, 'full', 'complex');
DER88 = sdpvar(3, 1, 'full', 'complex');
DER90 = sdpvar(3, 1, 'full', 'complex');
DER92 = sdpvar(3, 1, 'full', 'complex');
DeltaV = sdpvar(278, 1, 'full', 'complex');


Objective = trace(real(S150R149)) +0.2 * sum(real(DER83)) + 0.3 * sum(real(DER88)) + 0.3 * sum(real(DER90)) + 0.3 * sum(real(DER92)) + 0;
%Objective = 1e-3 * trace(real(S150R149));


Cons = [];
% constraints: 
% (1): voltage lower and upper bounds 
Cons = [Cons, v_lb <= diag(v2) <= v_ub];
Cons = [Cons, v_lb <= diag(v3) <= v_ub];
Cons = [Cons, v_lb <= diag(v7) <= v_ub];
Cons = [Cons, v_lb <= diag(v4) <= v_ub];
Cons = [Cons, v_lb <= diag(v5) <= v_ub];
Cons = [Cons, v_lb <= diag(v6) <= v_ub];
Cons = [Cons, v_lb <= diag(v8) <= v_ub];
Cons = [Cons, v_lb <= diag(v12) <= v_ub];
Cons = [Cons, v_lb <= diag(v9) <= v_ub];
Cons = [Cons, v_lb <= diag(v13) <= v_ub];
Cons = [Cons, v_lb <= diag(v14) <= v_ub];
Cons = [Cons, v_lb <= diag(v34) <= v_ub];
Cons = [Cons, v_lb <= diag(v18) <= v_ub];
Cons = [Cons, v_lb <= diag(v11) <= v_ub];
Cons = [Cons, v_lb <= diag(v10) <= v_ub];
Cons = [Cons, v_lb <= diag(v16) <= v_ub];
Cons = [Cons, v_lb <= diag(v17) <= v_ub];
Cons = [Cons, v_lb <= diag(v19) <= v_ub];
Cons = [Cons, v_lb <= diag(v21) <= v_ub];
Cons = [Cons, v_lb <= diag(v20) <= v_ub];
Cons = [Cons, v_lb <= diag(v22) <= v_ub];
Cons = [Cons, v_lb <= diag(v23) <= v_ub];
Cons = [Cons, v_lb <= diag(v24) <= v_ub];
Cons = [Cons, v_lb <= diag(v25) <= v_ub];
Cons = [Cons, v_lb <= diag(v26) <= v_ub];
Cons = [Cons, v_lb <= diag(v28) <= v_ub];
Cons = [Cons, v_lb <= diag(v27) <= v_ub];
Cons = [Cons, v_lb <= diag(v31) <= v_ub];
Cons = [Cons, v_lb <= diag(v33) <= v_ub];
Cons = [Cons, v_lb <= diag(v29) <= v_ub];
Cons = [Cons, v_lb <= diag(v30) <= v_ub];
Cons = [Cons, v_lb <= diag(v250) <= v_ub];
Cons = [Cons, v_lb <= diag(v32) <= v_ub];
Cons = [Cons, v_lb <= diag(v15) <= v_ub];
Cons = [Cons, v_lb <= diag(v36) <= v_ub];
Cons = [Cons, v_lb <= diag(v40) <= v_ub];
Cons = [Cons, v_lb <= diag(v37) <= v_ub];
Cons = [Cons, v_lb <= diag(v38) <= v_ub];
Cons = [Cons, v_lb <= diag(v39) <= v_ub];
Cons = [Cons, v_lb <= diag(v41) <= v_ub];
Cons = [Cons, v_lb <= diag(v42) <= v_ub];
Cons = [Cons, v_lb <= diag(v43) <= v_ub];
Cons = [Cons, v_lb <= diag(v44) <= v_ub];
Cons = [Cons, v_lb <= diag(v45) <= v_ub];
Cons = [Cons, v_lb <= diag(v47) <= v_ub];
Cons = [Cons, v_lb <= diag(v46) <= v_ub];
Cons = [Cons, v_lb <= diag(v48) <= v_ub];
Cons = [Cons, v_lb <= diag(v49) <= v_ub];
Cons = [Cons, v_lb <= diag(v50) <= v_ub];
Cons = [Cons, v_lb <= diag(v51) <= v_ub];
Cons = [Cons, v_lb <= diag(v53) <= v_ub];
Cons = [Cons, v_lb <= diag(v54) <= v_ub];
Cons = [Cons, v_lb <= diag(v55) <= v_ub];
Cons = [Cons, v_lb <= diag(v57) <= v_ub];
Cons = [Cons, v_lb <= diag(v56) <= v_ub];
Cons = [Cons, v_lb <= diag(v58) <= v_ub];
Cons = [Cons, v_lb <= diag(v60) <= v_ub];
Cons = [Cons, v_lb <= diag(v59) <= v_ub];
Cons = [Cons, v_lb <= diag(v61) <= v_ub];
Cons = [Cons, v_lb <= diag(v62) <= v_ub];
Cons = [Cons, v_lb <= diag(v63) <= v_ub];
Cons = [Cons, v_lb <= diag(v64) <= v_ub];
Cons = [Cons, v_lb <= diag(v65) <= v_ub];
Cons = [Cons, v_lb <= diag(v66) <= v_ub];
Cons = [Cons, v_lb <= diag(v68) <= v_ub];
Cons = [Cons, v_lb <= diag(v72) <= v_ub];
Cons = [Cons, v_lb <= diag(v97) <= v_ub];
Cons = [Cons, v_lb <= diag(v69) <= v_ub];
Cons = [Cons, v_lb <= diag(v70) <= v_ub];
Cons = [Cons, v_lb <= diag(v71) <= v_ub];
Cons = [Cons, v_lb <= diag(v73) <= v_ub];
Cons = [Cons, v_lb <= diag(v76) <= v_ub];
Cons = [Cons, v_lb <= diag(v74) <= v_ub];
Cons = [Cons, v_lb <= diag(v75) <= v_ub];
Cons = [Cons, v_lb <= diag(v77) <= v_ub];
Cons = [Cons, v_lb <= diag(v86) <= v_ub];
Cons = [Cons, v_lb <= diag(v78) <= v_ub];
Cons = [Cons, v_lb <= diag(v79) <= v_ub];
Cons = [Cons, v_lb <= diag(v80) <= v_ub];
Cons = [Cons, v_lb <= diag(v81) <= v_ub];
Cons = [Cons, v_lb <= diag(v82) <= v_ub];
Cons = [Cons, v_lb <= diag(v84) <= v_ub];
Cons = [Cons, v_lb <= diag(v83) <= v_ub];
Cons = [Cons, v_lb <= diag(v85) <= v_ub];
Cons = [Cons, v_lb <= diag(v87) <= v_ub];
Cons = [Cons, v_lb <= diag(v88) <= v_ub];
Cons = [Cons, v_lb <= diag(v89) <= v_ub];
Cons = [Cons, v_lb <= diag(v90) <= v_ub];
Cons = [Cons, v_lb <= diag(v91) <= v_ub];
Cons = [Cons, v_lb <= diag(v92) <= v_ub];
Cons = [Cons, v_lb <= diag(v93) <= v_ub];
Cons = [Cons, v_lb <= diag(v94) <= v_ub];
Cons = [Cons, v_lb <= diag(v95) <= v_ub];
Cons = [Cons, v_lb <= diag(v96) <= v_ub];
Cons = [Cons, v_lb <= diag(v98) <= v_ub];
Cons = [Cons, v_lb <= diag(v99) <= v_ub];
Cons = [Cons, v_lb <= diag(v100) <= v_ub];
Cons = [Cons, v_lb <= diag(v450) <= v_ub];
Cons = [Cons, v_lb <= diag(v102) <= v_ub];
Cons = [Cons, v_lb <= diag(v105) <= v_ub];
Cons = [Cons, v_lb <= diag(v103) <= v_ub];
Cons = [Cons, v_lb <= diag(v104) <= v_ub];
Cons = [Cons, v_lb <= diag(v106) <= v_ub];
Cons = [Cons, v_lb <= diag(v108) <= v_ub];
Cons = [Cons, v_lb <= diag(v107) <= v_ub];
Cons = [Cons, v_lb <= diag(v109) <= v_ub];
Cons = [Cons, v_lb <= diag(v300) <= v_ub];
Cons = [Cons, v_lb <= diag(v110) <= v_ub];
Cons = [Cons, v_lb <= diag(v111) <= v_ub];
Cons = [Cons, v_lb <= diag(v112) <= v_ub];
Cons = [Cons, v_lb <= diag(v113) <= v_ub];
Cons = [Cons, v_lb <= diag(v114) <= v_ub];
Cons = [Cons, v_lb <= diag(v35) <= v_ub];
Cons = [Cons, v_lb <= diag(v1) <= v_ub];
Cons = [Cons, v_lb <= diag(v52) <= v_ub];
Cons = [Cons, v_lb <= diag(v67) <= v_ub];
Cons = [Cons, v_lb <= diag(v101) <= v_ub];
Cons = [Cons, v_lb <= diag(v151) <= v_ub];
Cons = [Cons, v_lb <= diag(v150R) <= v_ub];
Cons = [Cons, v_lb <= diag(v9R) <= v_ub];
Cons = [Cons, v_lb <= diag(v25R) <= v_ub];
Cons = [Cons, v_lb <= diag(v160R) <= v_ub];
Cons = [Cons, v_lb <= diag(v610) <= v_ub];
Cons = [Cons, v_lb <= diag(v149) <= v_ub];
Cons = [Cons, v_lb <= diag(v152) <= v_ub];
Cons = [Cons, v_lb <= diag(v135) <= v_ub];
Cons = [Cons, v_lb <= diag(v160) <= v_ub];
Cons = [Cons, v_lb <= diag(v197) <= v_ub];
Cons = [Cons, v_lb <= diag(v61S) <= v_ub];
Cons = [Cons, v_lb <= diag(v300_OPEN) <= v_ub];
Cons = [Cons, v_lb <= diag(v94_OPEN) <= v_ub];
Cons = [Cons, v150 == v0 * ctranspose(v0)];

% (1): voltage across a line 
Cons = [Cons, v2 == v1([2],[2]) - S12*ctranspose(Z12) - Z12*ctranspose(S12) + Z12*l12*ctranspose(Z12)];
Cons = [Cons, [v1([2],[2]), S12; ctranspose(S12), l12] >= 0];
Cons = [Cons, diag(S12-Z12*l12)- loads([13]) - diag(v2 * Yloads([13],[13]))  + diag(v2 * Cbus([13],[13])) == 0];

Cons = [Cons, v3 == v1([3],[3]) - S13*ctranspose(Z13) - Z13*ctranspose(S13) + Z13*l13*ctranspose(Z13)];
Cons = [Cons, [v1([3],[3]), S13; ctranspose(S13), l13] >= 0];
Cons = [Cons, diag(S13-Z13*l13)- loads([14]) - diag(v3 * Yloads([14],[14]))  + diag(v3 * Cbus([14],[14])) == diag(S34) + diag(S35) + 0];

Cons = [Cons, v7 == v1 - S17*ctranspose(Z17) - Z17*ctranspose(S17) + Z17*l17*ctranspose(Z17)];
Cons = [Cons, [v1, S17; ctranspose(S17), l17] >= 0];
Cons = [Cons, diag(S17-Z17*l17)- loads([15, 16, 17]) - diag(v7 * Yloads([15, 16, 17],[15, 16, 17]))  + diag(v7 * Cbus([15, 16, 17],[15, 16, 17])) == diag(S78) + 0];

Cons = [Cons, v4 == v3 - S34*ctranspose(Z34) - Z34*ctranspose(S34) + Z34*l34*ctranspose(Z34)];
Cons = [Cons, [v3, S34; ctranspose(S34), l34] >= 0];
Cons = [Cons, diag(S34-Z34*l34)- loads([18]) - diag(v4 * Yloads([18],[18]))  + diag(v4 * Cbus([18],[18])) == 0];

Cons = [Cons, v5 == v3 - S35*ctranspose(Z35) - Z35*ctranspose(S35) + Z35*l35*ctranspose(Z35)];
Cons = [Cons, [v3, S35; ctranspose(S35), l35] >= 0];
Cons = [Cons, diag(S35-Z35*l35)- loads([19]) - diag(v5 * Yloads([19],[19]))  + diag(v5 * Cbus([19],[19])) == diag(S56) + 0];

Cons = [Cons, v6 == v5 - S56*ctranspose(Z56) - Z56*ctranspose(S56) + Z56*l56*ctranspose(Z56)];
Cons = [Cons, [v5, S56; ctranspose(S56), l56] >= 0];
Cons = [Cons, diag(S56-Z56*l56)- loads([20]) - diag(v6 * Yloads([20],[20]))  + diag(v6 * Cbus([20],[20])) == 0];

Cons = [Cons, v8 == v7 - S78*ctranspose(Z78) - Z78*ctranspose(S78) + Z78*l78*ctranspose(Z78)];
Cons = [Cons, [v7, S78; ctranspose(S78), l78] >= 0];
Cons = [Cons, diag(S78-Z78*l78)- loads([21, 22, 23]) - diag(v8 * Yloads([21, 22, 23],[21, 22, 23]))  + diag(v8 * Cbus([21, 22, 23],[21, 22, 23])) == [0; diag(S812); 0] + [diag(S89); 0; 0] + diag(S813) + 0];

Cons = [Cons, v12 == v8([2],[2]) - S812*ctranspose(Z812) - Z812*ctranspose(S812) + Z812*l812*ctranspose(Z812)];
Cons = [Cons, [v8([2],[2]), S812; ctranspose(S812), l812] >= 0];
Cons = [Cons, diag(S812-Z812*l812)- loads([24]) - diag(v12 * Yloads([24],[24]))  + diag(v12 * Cbus([24],[24])) == 0];

Cons = [Cons, v9 == v8([1],[1]) - S89*ctranspose(Z89) - Z89*ctranspose(S89) + Z89*l89*ctranspose(Z89)];
Cons = [Cons, [v8([1],[1]), S89; ctranspose(S89), l89] >= 0];
Cons = [Cons, diag(S89-Z89*l89)- loads([25]) - diag(v9 * Yloads([25],[25]))  + diag(v9 * Cbus([25],[25])) == diag(S99R) + 0];

Cons = [Cons, v13 == v8 - S813*ctranspose(Z813) - Z813*ctranspose(S813) + Z813*l813*ctranspose(Z813)];
Cons = [Cons, [v8, S813; ctranspose(S813), l813] >= 0];
Cons = [Cons, diag(S813-Z813*l813)- loads([26, 27, 28]) - diag(v13 * Yloads([26, 27, 28],[26, 27, 28]))  + diag(v13 * Cbus([26, 27, 28],[26, 27, 28])) == [0; 0; diag(S1334)] + diag(S1318) + diag(S13152) + 0];

Cons = [Cons, v14 == v9R - S9R14*ctranspose(Z9R14) - Z9R14*ctranspose(S9R14) + Z9R14*l9R14*ctranspose(Z9R14)];
Cons = [Cons, [v9R, S9R14; ctranspose(S9R14), l9R14] >= 0];
Cons = [Cons, diag(S9R14-Z9R14*l9R14)- loads([30]) - diag(v14 * Yloads([30],[30]))  + diag(v14 * Cbus([30],[30])) == diag(S1411) + diag(S1410) + 0];

Cons = [Cons, v34 == v13([3],[3]) - S1334*ctranspose(Z1334) - Z1334*ctranspose(S1334) + Z1334*l1334*ctranspose(Z1334)];
Cons = [Cons, [v13([3],[3]), S1334; ctranspose(S1334), l1334] >= 0];
Cons = [Cons, diag(S1334-Z1334*l1334)- loads([31]) - diag(v34 * Yloads([31],[31]))  + diag(v34 * Cbus([31],[31])) == diag(S3415) + 0];

Cons = [Cons, v18 == v13 - S1318*ctranspose(Z1318) - Z1318*ctranspose(S1318) + Z1318*l1318*ctranspose(Z1318)];
Cons = [Cons, [v13, S1318; ctranspose(S1318), l1318] >= 0];
Cons = [Cons, diag(S1318-Z1318*l1318)- loads([32, 33, 34]) - diag(v18 * Yloads([32, 33, 34],[32, 33, 34]))  + diag(v18 * Cbus([32, 33, 34],[32, 33, 34])) == [diag(S1819); 0; 0] + diag(S1821) + diag(S18135) + 0];

Cons = [Cons, v11 == v14 - S1411*ctranspose(Z1411) - Z1411*ctranspose(S1411) + Z1411*l1411*ctranspose(Z1411)];
Cons = [Cons, [v14, S1411; ctranspose(S1411), l1411] >= 0];
Cons = [Cons, diag(S1411-Z1411*l1411)- loads([35]) - diag(v11 * Yloads([35],[35]))  + diag(v11 * Cbus([35],[35])) == 0];

Cons = [Cons, v10 == v14 - S1410*ctranspose(Z1410) - Z1410*ctranspose(S1410) + Z1410*l1410*ctranspose(Z1410)];
Cons = [Cons, [v14, S1410; ctranspose(S1410), l1410] >= 0];
Cons = [Cons, diag(S1410-Z1410*l1410)- loads([36]) - diag(v10 * Yloads([36],[36]))  + diag(v10 * Cbus([36],[36])) == 0];

Cons = [Cons, v16 == v15 - S1516*ctranspose(Z1516) - Z1516*ctranspose(S1516) + Z1516*l1516*ctranspose(Z1516)];
Cons = [Cons, [v15, S1516; ctranspose(S1516), l1516] >= 0];
Cons = [Cons, diag(S1516-Z1516*l1516)- loads([38]) - diag(v16 * Yloads([38],[38]))  + diag(v16 * Cbus([38],[38])) == 0];

Cons = [Cons, v17 == v15 - S1517*ctranspose(Z1517) - Z1517*ctranspose(S1517) + Z1517*l1517*ctranspose(Z1517)];
Cons = [Cons, [v15, S1517; ctranspose(S1517), l1517] >= 0];
Cons = [Cons, diag(S1517-Z1517*l1517)- loads([39]) - diag(v17 * Yloads([39],[39]))  + diag(v17 * Cbus([39],[39])) == 0];

Cons = [Cons, v19 == v18([1],[1]) - S1819*ctranspose(Z1819) - Z1819*ctranspose(S1819) + Z1819*l1819*ctranspose(Z1819)];
Cons = [Cons, [v18([1],[1]), S1819; ctranspose(S1819), l1819] >= 0];
Cons = [Cons, diag(S1819-Z1819*l1819)- loads([40]) - diag(v19 * Yloads([40],[40]))  + diag(v19 * Cbus([40],[40])) == diag(S1920) + 0];

Cons = [Cons, v21 == v18 - S1821*ctranspose(Z1821) - Z1821*ctranspose(S1821) + Z1821*l1821*ctranspose(Z1821)];
Cons = [Cons, [v18, S1821; ctranspose(S1821), l1821] >= 0];
Cons = [Cons, diag(S1821-Z1821*l1821)- loads([41, 42, 43]) - diag(v21 * Yloads([41, 42, 43],[41, 42, 43]))  + diag(v21 * Cbus([41, 42, 43],[41, 42, 43])) == [0; diag(S2122); 0] + diag(S2123) + 0];

Cons = [Cons, v20 == v19 - S1920*ctranspose(Z1920) - Z1920*ctranspose(S1920) + Z1920*l1920*ctranspose(Z1920)];
Cons = [Cons, [v19, S1920; ctranspose(S1920), l1920] >= 0];
Cons = [Cons, diag(S1920-Z1920*l1920)- loads([44]) - diag(v20 * Yloads([44],[44]))  + diag(v20 * Cbus([44],[44])) == 0];

Cons = [Cons, v22 == v21([2],[2]) - S2122*ctranspose(Z2122) - Z2122*ctranspose(S2122) + Z2122*l2122*ctranspose(Z2122)];
Cons = [Cons, [v21([2],[2]), S2122; ctranspose(S2122), l2122] >= 0];
Cons = [Cons, diag(S2122-Z2122*l2122)- loads([45]) - diag(v22 * Yloads([45],[45]))  + diag(v22 * Cbus([45],[45])) == 0];

Cons = [Cons, v23 == v21 - S2123*ctranspose(Z2123) - Z2123*ctranspose(S2123) + Z2123*l2123*ctranspose(Z2123)];
Cons = [Cons, [v21, S2123; ctranspose(S2123), l2123] >= 0];
Cons = [Cons, diag(S2123-Z2123*l2123)- loads([46, 47, 48]) - diag(v23 * Yloads([46, 47, 48],[46, 47, 48]))  + diag(v23 * Cbus([46, 47, 48],[46, 47, 48])) == [0; 0; diag(S2324)] + diag(S2325) + 0];

Cons = [Cons, v24 == v23([3],[3]) - S2324*ctranspose(Z2324) - Z2324*ctranspose(S2324) + Z2324*l2324*ctranspose(Z2324)];
Cons = [Cons, [v23([3],[3]), S2324; ctranspose(S2324), l2324] >= 0];
Cons = [Cons, diag(S2324-Z2324*l2324)- loads([49]) - diag(v24 * Yloads([49],[49]))  + diag(v24 * Cbus([49],[49])) == 0];

Cons = [Cons, v25 == v23 - S2325*ctranspose(Z2325) - Z2325*ctranspose(S2325) + Z2325*l2325*ctranspose(Z2325)];
Cons = [Cons, [v23, S2325; ctranspose(S2325), l2325] >= 0];
Cons = [Cons, diag(S2325-Z2325*l2325)- loads([50, 51, 52]) - diag(v25 * Yloads([50, 51, 52],[50, 51, 52]))  + diag(v25 * Cbus([50, 51, 52],[50, 51, 52])) == diag(S2528) + [S2525R(1,1); 0; S2525R(2,2) ] + 0];

Cons = [Cons, v26 == v25R - S25R26*ctranspose(Z25R26) - Z25R26*ctranspose(S25R26) + Z25R26*l25R26*ctranspose(Z25R26)];
Cons = [Cons, [v25R, S25R26; ctranspose(S25R26), l25R26] >= 0];
Cons = [Cons, diag(S25R26-Z25R26*l25R26)- loads([55, 56]) - diag(v26 * Yloads([55, 56],[55, 56]))  + diag(v26 * Cbus([55, 56],[55, 56])) == diag(S2627) + [0; diag(S2631)] + 0];

Cons = [Cons, v28 == v25 - S2528*ctranspose(Z2528) - Z2528*ctranspose(S2528) + Z2528*l2528*ctranspose(Z2528)];
Cons = [Cons, [v25, S2528; ctranspose(S2528), l2528] >= 0];
Cons = [Cons, diag(S2528-Z2528*l2528)- loads([57, 58, 59]) - diag(v28 * Yloads([57, 58, 59],[57, 58, 59]))  + diag(v28 * Cbus([57, 58, 59],[57, 58, 59])) == diag(S2829) + 0];

Cons = [Cons, v27 == v26 - S2627*ctranspose(Z2627) - Z2627*ctranspose(S2627) + Z2627*l2627*ctranspose(Z2627)];
Cons = [Cons, [v26, S2627; ctranspose(S2627), l2627] >= 0];
Cons = [Cons, diag(S2627-Z2627*l2627)- loads([60, 61]) - diag(v27 * Yloads([60, 61],[60, 61]))  + diag(v27 * Cbus([60, 61],[60, 61])) == [diag(S2733); 0] + 0];

Cons = [Cons, v31 == v26([2],[2]) - S2631*ctranspose(Z2631) - Z2631*ctranspose(S2631) + Z2631*l2631*ctranspose(Z2631)];
Cons = [Cons, [v26([2],[2]), S2631; ctranspose(S2631), l2631] >= 0];
Cons = [Cons, diag(S2631-Z2631*l2631)- loads([62]) - diag(v31 * Yloads([62],[62]))  + diag(v31 * Cbus([62],[62])) == diag(S3132) + 0];

Cons = [Cons, v33 == v27([1],[1]) - S2733*ctranspose(Z2733) - Z2733*ctranspose(S2733) + Z2733*l2733*ctranspose(Z2733)];
Cons = [Cons, [v27([1],[1]), S2733; ctranspose(S2733), l2733] >= 0];
Cons = [Cons, diag(S2733-Z2733*l2733)- loads([63]) - diag(v33 * Yloads([63],[63]))  + diag(v33 * Cbus([63],[63])) == 0];

Cons = [Cons, v29 == v28 - S2829*ctranspose(Z2829) - Z2829*ctranspose(S2829) + Z2829*l2829*ctranspose(Z2829)];
Cons = [Cons, [v28, S2829; ctranspose(S2829), l2829] >= 0];
Cons = [Cons, diag(S2829-Z2829*l2829)- loads([64, 65, 66]) - diag(v29 * Yloads([64, 65, 66],[64, 65, 66]))  + diag(v29 * Cbus([64, 65, 66],[64, 65, 66])) == diag(S2930) + 0];

Cons = [Cons, v30 == v29 - S2930*ctranspose(Z2930) - Z2930*ctranspose(S2930) + Z2930*l2930*ctranspose(Z2930)];
Cons = [Cons, [v29, S2930; ctranspose(S2930), l2930] >= 0];
Cons = [Cons, diag(S2930-Z2930*l2930)- loads([67, 68, 69]) - diag(v30 * Yloads([67, 68, 69],[67, 68, 69]))  + diag(v30 * Cbus([67, 68, 69],[67, 68, 69])) == diag(S30250) + 0];

Cons = [Cons, v250 == v30 - S30250*ctranspose(Z30250) - Z30250*ctranspose(S30250) + Z30250*l30250*ctranspose(Z30250)];
Cons = [Cons, [v30, S30250; ctranspose(S30250), l30250] >= 0];
Cons = [Cons, diag(S30250-Z30250*l30250)- loads([70, 71, 72]) - diag(v250 * Yloads([70, 71, 72],[70, 71, 72]))  + diag(v250 * Cbus([70, 71, 72],[70, 71, 72])) == 0];

Cons = [Cons, v32 == v31 - S3132*ctranspose(Z3132) - Z3132*ctranspose(S3132) + Z3132*l3132*ctranspose(Z3132)];
Cons = [Cons, [v31, S3132; ctranspose(S3132), l3132] >= 0];
Cons = [Cons, diag(S3132-Z3132*l3132)- loads([73]) - diag(v32 * Yloads([73],[73]))  + diag(v32 * Cbus([73],[73])) == 0];

Cons = [Cons, v15 == v34 - S3415*ctranspose(Z3415) - Z3415*ctranspose(S3415) + Z3415*l3415*ctranspose(Z3415)];
Cons = [Cons, [v34, S3415; ctranspose(S3415), l3415] >= 0];
Cons = [Cons, diag(S3415-Z3415*l3415)- loads([37]) - diag(v15 * Yloads([37],[37]))  + diag(v15 * Cbus([37],[37])) == diag(S1516) + diag(S1517) + 0];

Cons = [Cons, v36 == v35([1, 2],[1, 2]) - S3536*ctranspose(Z3536) - Z3536*ctranspose(S3536) + Z3536*l3536*ctranspose(Z3536)];
Cons = [Cons, [v35([1, 2],[1, 2]), S3536; ctranspose(S3536), l3536] >= 0];
Cons = [Cons, diag(S3536-Z3536*l3536)- loads([76, 77]) - diag(v36 * Yloads([76, 77],[76, 77]))  + diag(v36 * Cbus([76, 77],[76, 77])) == [diag(S3637); 0] + [0; diag(S3638)] + 0];

Cons = [Cons, v40 == v35 - S3540*ctranspose(Z3540) - Z3540*ctranspose(S3540) + Z3540*l3540*ctranspose(Z3540)];
Cons = [Cons, [v35, S3540; ctranspose(S3540), l3540] >= 0];
Cons = [Cons, diag(S3540-Z3540*l3540)- loads([79, 80, 81]) - diag(v40 * Yloads([79, 80, 81],[79, 80, 81]))  + diag(v40 * Cbus([79, 80, 81],[79, 80, 81])) == [0; 0; diag(S4041)] + diag(S4042) + 0];

Cons = [Cons, v37 == v36([1],[1]) - S3637*ctranspose(Z3637) - Z3637*ctranspose(S3637) + Z3637*l3637*ctranspose(Z3637)];
Cons = [Cons, [v36([1],[1]), S3637; ctranspose(S3637), l3637] >= 0];
Cons = [Cons, diag(S3637-Z3637*l3637)- loads([82]) - diag(v37 * Yloads([82],[82]))  + diag(v37 * Cbus([82],[82])) == 0];

Cons = [Cons, v38 == v36([2],[2]) - S3638*ctranspose(Z3638) - Z3638*ctranspose(S3638) + Z3638*l3638*ctranspose(Z3638)];
Cons = [Cons, [v36([2],[2]), S3638; ctranspose(S3638), l3638] >= 0];
Cons = [Cons, diag(S3638-Z3638*l3638)- loads([83]) - diag(v38 * Yloads([83],[83]))  + diag(v38 * Cbus([83],[83])) == diag(S3839) + 0];

Cons = [Cons, v39 == v38 - S3839*ctranspose(Z3839) - Z3839*ctranspose(S3839) + Z3839*l3839*ctranspose(Z3839)];
Cons = [Cons, [v38, S3839; ctranspose(S3839), l3839] >= 0];
Cons = [Cons, diag(S3839-Z3839*l3839)- loads([84]) - diag(v39 * Yloads([84],[84]))  + diag(v39 * Cbus([84],[84])) == 0];

Cons = [Cons, v41 == v40([3],[3]) - S4041*ctranspose(Z4041) - Z4041*ctranspose(S4041) + Z4041*l4041*ctranspose(Z4041)];
Cons = [Cons, [v40([3],[3]), S4041; ctranspose(S4041), l4041] >= 0];
Cons = [Cons, diag(S4041-Z4041*l4041)- loads([85]) - diag(v41 * Yloads([85],[85]))  + diag(v41 * Cbus([85],[85])) == 0];

Cons = [Cons, v42 == v40 - S4042*ctranspose(Z4042) - Z4042*ctranspose(S4042) + Z4042*l4042*ctranspose(Z4042)];
Cons = [Cons, [v40, S4042; ctranspose(S4042), l4042] >= 0];
Cons = [Cons, diag(S4042-Z4042*l4042)- loads([86, 87, 88]) - diag(v42 * Yloads([86, 87, 88],[86, 87, 88]))  + diag(v42 * Cbus([86, 87, 88],[86, 87, 88])) == [0; diag(S4243); 0] + diag(S4244) + 0];

Cons = [Cons, v43 == v42([2],[2]) - S4243*ctranspose(Z4243) - Z4243*ctranspose(S4243) + Z4243*l4243*ctranspose(Z4243)];
Cons = [Cons, [v42([2],[2]), S4243; ctranspose(S4243), l4243] >= 0];
Cons = [Cons, diag(S4243-Z4243*l4243)- loads([89]) - diag(v43 * Yloads([89],[89]))  + diag(v43 * Cbus([89],[89])) == 0];

Cons = [Cons, v44 == v42 - S4244*ctranspose(Z4244) - Z4244*ctranspose(S4244) + Z4244*l4244*ctranspose(Z4244)];
Cons = [Cons, [v42, S4244; ctranspose(S4244), l4244] >= 0];
Cons = [Cons, diag(S4244-Z4244*l4244)- loads([90, 91, 92]) - diag(v44 * Yloads([90, 91, 92],[90, 91, 92]))  + diag(v44 * Cbus([90, 91, 92],[90, 91, 92])) == [diag(S4445); 0; 0] + diag(S4447) + 0];

Cons = [Cons, v45 == v44([1],[1]) - S4445*ctranspose(Z4445) - Z4445*ctranspose(S4445) + Z4445*l4445*ctranspose(Z4445)];
Cons = [Cons, [v44([1],[1]), S4445; ctranspose(S4445), l4445] >= 0];
Cons = [Cons, diag(S4445-Z4445*l4445)- loads([93]) - diag(v45 * Yloads([93],[93]))  + diag(v45 * Cbus([93],[93])) == diag(S4546) + 0];

Cons = [Cons, v47 == v44 - S4447*ctranspose(Z4447) - Z4447*ctranspose(S4447) + Z4447*l4447*ctranspose(Z4447)];
Cons = [Cons, [v44, S4447; ctranspose(S4447), l4447] >= 0];
Cons = [Cons, diag(S4447-Z4447*l4447)- loads([94, 95, 96]) - diag(v47 * Yloads([94, 95, 96],[94, 95, 96]))  + diag(v47 * Cbus([94, 95, 96],[94, 95, 96])) == diag(S4748) + diag(S4749) + 0];

Cons = [Cons, v46 == v45 - S4546*ctranspose(Z4546) - Z4546*ctranspose(S4546) + Z4546*l4546*ctranspose(Z4546)];
Cons = [Cons, [v45, S4546; ctranspose(S4546), l4546] >= 0];
Cons = [Cons, diag(S4546-Z4546*l4546)- loads([97]) - diag(v46 * Yloads([97],[97]))  + diag(v46 * Cbus([97],[97])) == 0];

Cons = [Cons, v48 == v47 - S4748*ctranspose(Z4748) - Z4748*ctranspose(S4748) + Z4748*l4748*ctranspose(Z4748)];
Cons = [Cons, [v47, S4748; ctranspose(S4748), l4748] >= 0];
Cons = [Cons, diag(S4748-Z4748*l4748)- loads([98, 99, 100]) - diag(v48 * Yloads([98, 99, 100],[98, 99, 100]))  + diag(v48 * Cbus([98, 99, 100],[98, 99, 100])) == 0];

Cons = [Cons, v49 == v47 - S4749*ctranspose(Z4749) - Z4749*ctranspose(S4749) + Z4749*l4749*ctranspose(Z4749)];
Cons = [Cons, [v47, S4749; ctranspose(S4749), l4749] >= 0];
Cons = [Cons, diag(S4749-Z4749*l4749)- loads([101, 102, 103]) - diag(v49 * Yloads([101, 102, 103],[101, 102, 103]))  + diag(v49 * Cbus([101, 102, 103],[101, 102, 103])) == diag(S4950) + 0];

Cons = [Cons, v50 == v49 - S4950*ctranspose(Z4950) - Z4950*ctranspose(S4950) + Z4950*l4950*ctranspose(Z4950)];
Cons = [Cons, [v49, S4950; ctranspose(S4950), l4950] >= 0];
Cons = [Cons, diag(S4950-Z4950*l4950)- loads([104, 105, 106]) - diag(v50 * Yloads([104, 105, 106],[104, 105, 106]))  + diag(v50 * Cbus([104, 105, 106],[104, 105, 106])) == diag(S5051) + 0];

Cons = [Cons, v51 == v50 - S5051*ctranspose(Z5051) - Z5051*ctranspose(S5051) + Z5051*l5051*ctranspose(Z5051)];
Cons = [Cons, [v50, S5051; ctranspose(S5051), l5051] >= 0];
Cons = [Cons, diag(S5051-Z5051*l5051)- loads([107, 108, 109]) - diag(v51 * Yloads([107, 108, 109],[107, 108, 109]))  + diag(v51 * Cbus([107, 108, 109],[107, 108, 109])) == diag(S51151) + 0];

Cons = [Cons, v53 == v52 - S5253*ctranspose(Z5253) - Z5253*ctranspose(S5253) + Z5253*l5253*ctranspose(Z5253)];
Cons = [Cons, [v52, S5253; ctranspose(S5253), l5253] >= 0];
Cons = [Cons, diag(S5253-Z5253*l5253)- loads([116, 117, 118]) - diag(v53 * Yloads([116, 117, 118],[116, 117, 118]))  + diag(v53 * Cbus([116, 117, 118],[116, 117, 118])) == diag(S5354) + 0];

Cons = [Cons, v54 == v53 - S5354*ctranspose(Z5354) - Z5354*ctranspose(S5354) + Z5354*l5354*ctranspose(Z5354)];
Cons = [Cons, [v53, S5354; ctranspose(S5354), l5354] >= 0];
Cons = [Cons, diag(S5354-Z5354*l5354)- loads([119, 120, 121]) - diag(v54 * Yloads([119, 120, 121],[119, 120, 121]))  + diag(v54 * Cbus([119, 120, 121],[119, 120, 121])) == diag(S5455) + diag(S5457) + [diag(S5494_OPEN); 0; 0] + 0];

Cons = [Cons, v55 == v54 - S5455*ctranspose(Z5455) - Z5455*ctranspose(S5455) + Z5455*l5455*ctranspose(Z5455)];
Cons = [Cons, [v54, S5455; ctranspose(S5455), l5455] >= 0];
Cons = [Cons, diag(S5455-Z5455*l5455)- loads([122, 123, 124]) - diag(v55 * Yloads([122, 123, 124],[122, 123, 124]))  + diag(v55 * Cbus([122, 123, 124],[122, 123, 124])) == diag(S5556) + 0];

Cons = [Cons, v57 == v54 - S5457*ctranspose(Z5457) - Z5457*ctranspose(S5457) + Z5457*l5457*ctranspose(Z5457)];
Cons = [Cons, [v54, S5457; ctranspose(S5457), l5457] >= 0];
Cons = [Cons, diag(S5457-Z5457*l5457)- loads([125, 126, 127]) - diag(v57 * Yloads([125, 126, 127],[125, 126, 127]))  + diag(v57 * Cbus([125, 126, 127],[125, 126, 127])) == [0; diag(S5758); 0] + diag(S5760) + 0];

Cons = [Cons, v56 == v55 - S5556*ctranspose(Z5556) - Z5556*ctranspose(S5556) + Z5556*l5556*ctranspose(Z5556)];
Cons = [Cons, [v55, S5556; ctranspose(S5556), l5556] >= 0];
Cons = [Cons, diag(S5556-Z5556*l5556)- loads([128, 129, 130]) - diag(v56 * Yloads([128, 129, 130],[128, 129, 130]))  + diag(v56 * Cbus([128, 129, 130],[128, 129, 130])) == 0];

Cons = [Cons, v58 == v57([2],[2]) - S5758*ctranspose(Z5758) - Z5758*ctranspose(S5758) + Z5758*l5758*ctranspose(Z5758)];
Cons = [Cons, [v57([2],[2]), S5758; ctranspose(S5758), l5758] >= 0];
Cons = [Cons, diag(S5758-Z5758*l5758)- loads([131]) - diag(v58 * Yloads([131],[131]))  + diag(v58 * Cbus([131],[131])) == diag(S5859) + 0];

Cons = [Cons, v60 == v57 - S5760*ctranspose(Z5760) - Z5760*ctranspose(S5760) + Z5760*l5760*ctranspose(Z5760)];
Cons = [Cons, [v57, S5760; ctranspose(S5760), l5760] >= 0];
Cons = [Cons, diag(S5760-Z5760*l5760)- loads([132, 133, 134]) - diag(v60 * Yloads([132, 133, 134],[132, 133, 134]))  + diag(v60 * Cbus([132, 133, 134],[132, 133, 134])) == diag(S6061) + diag(S6062) + diag(S60160) + 0];

Cons = [Cons, v59 == v58 - S5859*ctranspose(Z5859) - Z5859*ctranspose(S5859) + Z5859*l5859*ctranspose(Z5859)];
Cons = [Cons, [v58, S5859; ctranspose(S5859), l5859] >= 0];
Cons = [Cons, diag(S5859-Z5859*l5859)- loads([135]) - diag(v59 * Yloads([135],[135]))  + diag(v59 * Cbus([135],[135])) == 0];

Cons = [Cons, v61 == v60 - S6061*ctranspose(Z6061) - Z6061*ctranspose(S6061) + Z6061*l6061*ctranspose(Z6061)];
Cons = [Cons, [v60, S6061; ctranspose(S6061), l6061] >= 0];
Cons = [Cons, diag(S6061-Z6061*l6061)- loads([136, 137, 138]) - diag(v61 * Yloads([136, 137, 138],[136, 137, 138]))  + diag(v61 * Cbus([136, 137, 138],[136, 137, 138])) == diag(S6161S) + 0];

Cons = [Cons, v62 == v60 - S6062*ctranspose(Z6062) - Z6062*ctranspose(S6062) + Z6062*l6062*ctranspose(Z6062)];
Cons = [Cons, [v60, S6062; ctranspose(S6062), l6062] >= 0];
Cons = [Cons, diag(S6062-Z6062*l6062)- loads([139, 140, 141]) - diag(v62 * Yloads([139, 140, 141],[139, 140, 141]))  + diag(v62 * Cbus([139, 140, 141],[139, 140, 141])) == diag(S6263) + 0];

Cons = [Cons, v63 == v62 - S6263*ctranspose(Z6263) - Z6263*ctranspose(S6263) + Z6263*l6263*ctranspose(Z6263)];
Cons = [Cons, [v62, S6263; ctranspose(S6263), l6263] >= 0];
Cons = [Cons, diag(S6263-Z6263*l6263)- loads([142, 143, 144]) - diag(v63 * Yloads([142, 143, 144],[142, 143, 144]))  + diag(v63 * Cbus([142, 143, 144],[142, 143, 144])) == diag(S6364) + 0];

Cons = [Cons, v64 == v63 - S6364*ctranspose(Z6364) - Z6364*ctranspose(S6364) + Z6364*l6364*ctranspose(Z6364)];
Cons = [Cons, [v63, S6364; ctranspose(S6364), l6364] >= 0];
Cons = [Cons, diag(S6364-Z6364*l6364)- loads([145, 146, 147]) - diag(v64 * Yloads([145, 146, 147],[145, 146, 147]))  + diag(v64 * Cbus([145, 146, 147],[145, 146, 147])) == diag(S6465) + 0];

Cons = [Cons, v65 == v64 - S6465*ctranspose(Z6465) - Z6465*ctranspose(S6465) + Z6465*l6465*ctranspose(Z6465)];
Cons = [Cons, [v64, S6465; ctranspose(S6465), l6465] >= 0];
Cons = [Cons, diag(S6465-Z6465*l6465)- loads([148, 149, 150]) - diag(v65 * Yloads([148, 149, 150],[148, 149, 150]))  + diag(v65 * Cbus([148, 149, 150],[148, 149, 150])) == diag(S6566) + 0];

Cons = [Cons, v66 == v65 - S6566*ctranspose(Z6566) - Z6566*ctranspose(S6566) + Z6566*l6566*ctranspose(Z6566)];
Cons = [Cons, [v65, S6566; ctranspose(S6566), l6566] >= 0];
Cons = [Cons, diag(S6566-Z6566*l6566)- loads([151, 152, 153]) - diag(v66 * Yloads([151, 152, 153],[151, 152, 153]))  + diag(v66 * Cbus([151, 152, 153],[151, 152, 153])) == 0];

Cons = [Cons, v68 == v67([1],[1]) - S6768*ctranspose(Z6768) - Z6768*ctranspose(S6768) + Z6768*l6768*ctranspose(Z6768)];
Cons = [Cons, [v67([1],[1]), S6768; ctranspose(S6768), l6768] >= 0];
Cons = [Cons, diag(S6768-Z6768*l6768)- loads([155]) - diag(v68 * Yloads([155],[155]))  + diag(v68 * Cbus([155],[155])) == diag(S6869) + 0];

Cons = [Cons, v72 == v67 - S6772*ctranspose(Z6772) - Z6772*ctranspose(S6772) + Z6772*l6772*ctranspose(Z6772)];
Cons = [Cons, [v67, S6772; ctranspose(S6772), l6772] >= 0];
Cons = [Cons, diag(S6772-Z6772*l6772)- loads([158, 159, 160]) - diag(v72 * Yloads([158, 159, 160],[158, 159, 160]))  + diag(v72 * Cbus([158, 159, 160],[158, 159, 160])) == [0; 0; diag(S7273)] + diag(S7276) + 0];

Cons = [Cons, v97 == v67 - S6797*ctranspose(Z6797) - Z6797*ctranspose(S6797) + Z6797*l6797*ctranspose(Z6797)];
Cons = [Cons, [v67, S6797; ctranspose(S6797), l6797] >= 0];
Cons = [Cons, diag(S6797-Z6797*l6797)- loads([161, 162, 163]) - diag(v97 * Yloads([161, 162, 163],[161, 162, 163]))  + diag(v97 * Cbus([161, 162, 163],[161, 162, 163])) == diag(S9798) + diag(S97197) + 0];

Cons = [Cons, v69 == v68 - S6869*ctranspose(Z6869) - Z6869*ctranspose(S6869) + Z6869*l6869*ctranspose(Z6869)];
Cons = [Cons, [v68, S6869; ctranspose(S6869), l6869] >= 0];
Cons = [Cons, diag(S6869-Z6869*l6869)- loads([164]) - diag(v69 * Yloads([164],[164]))  + diag(v69 * Cbus([164],[164])) == diag(S6970) + 0];

Cons = [Cons, v70 == v69 - S6970*ctranspose(Z6970) - Z6970*ctranspose(S6970) + Z6970*l6970*ctranspose(Z6970)];
Cons = [Cons, [v69, S6970; ctranspose(S6970), l6970] >= 0];
Cons = [Cons, diag(S6970-Z6970*l6970)- loads([165]) - diag(v70 * Yloads([165],[165]))  + diag(v70 * Cbus([165],[165])) == diag(S7071) + 0];

Cons = [Cons, v71 == v70 - S7071*ctranspose(Z7071) - Z7071*ctranspose(S7071) + Z7071*l7071*ctranspose(Z7071)];
Cons = [Cons, [v70, S7071; ctranspose(S7071), l7071] >= 0];
Cons = [Cons, diag(S7071-Z7071*l7071)- loads([166]) - diag(v71 * Yloads([166],[166]))  + diag(v71 * Cbus([166],[166])) == 0];

Cons = [Cons, v73 == v72([3],[3]) - S7273*ctranspose(Z7273) - Z7273*ctranspose(S7273) + Z7273*l7273*ctranspose(Z7273)];
Cons = [Cons, [v72([3],[3]), S7273; ctranspose(S7273), l7273] >= 0];
Cons = [Cons, diag(S7273-Z7273*l7273)- loads([167]) - diag(v73 * Yloads([167],[167]))  + diag(v73 * Cbus([167],[167])) == diag(S7374) + 0];

Cons = [Cons, v76 == v72 - S7276*ctranspose(Z7276) - Z7276*ctranspose(S7276) + Z7276*l7276*ctranspose(Z7276)];
Cons = [Cons, [v72, S7276; ctranspose(S7276), l7276] >= 0];
Cons = [Cons, diag(S7276-Z7276*l7276)- loads([168, 169, 170]) - diag(v76 * Yloads([168, 169, 170],[168, 169, 170]))  + diag(v76 * Cbus([168, 169, 170],[168, 169, 170])) == diag(S7677) + diag(S7686) + 0];

Cons = [Cons, v74 == v73 - S7374*ctranspose(Z7374) - Z7374*ctranspose(S7374) + Z7374*l7374*ctranspose(Z7374)];
Cons = [Cons, [v73, S7374; ctranspose(S7374), l7374] >= 0];
Cons = [Cons, diag(S7374-Z7374*l7374)- loads([171]) - diag(v74 * Yloads([171],[171]))  + diag(v74 * Cbus([171],[171])) == diag(S7475) + 0];

Cons = [Cons, v75 == v74 - S7475*ctranspose(Z7475) - Z7475*ctranspose(S7475) + Z7475*l7475*ctranspose(Z7475)];
Cons = [Cons, [v74, S7475; ctranspose(S7475), l7475] >= 0];
Cons = [Cons, diag(S7475-Z7475*l7475)- loads([172]) - diag(v75 * Yloads([172],[172]))  + diag(v75 * Cbus([172],[172])) == 0];

Cons = [Cons, v77 == v76 - S7677*ctranspose(Z7677) - Z7677*ctranspose(S7677) + Z7677*l7677*ctranspose(Z7677)];
Cons = [Cons, [v76, S7677; ctranspose(S7677), l7677] >= 0];
Cons = [Cons, diag(S7677-Z7677*l7677)- loads([173, 174, 175]) - diag(v77 * Yloads([173, 174, 175],[173, 174, 175]))  + diag(v77 * Cbus([173, 174, 175],[173, 174, 175])) == diag(S7778) + 0];

Cons = [Cons, v86 == v76 - S7686*ctranspose(Z7686) - Z7686*ctranspose(S7686) + Z7686*l7686*ctranspose(Z7686)];
Cons = [Cons, [v76, S7686; ctranspose(S7686), l7686] >= 0];
Cons = [Cons, diag(S7686-Z7686*l7686)- loads([176, 177, 178]) - diag(v86 * Yloads([176, 177, 178],[176, 177, 178]))  + diag(v86 * Cbus([176, 177, 178],[176, 177, 178])) == diag(S8687) + 0];

Cons = [Cons, v78 == v77 - S7778*ctranspose(Z7778) - Z7778*ctranspose(S7778) + Z7778*l7778*ctranspose(Z7778)];
Cons = [Cons, [v77, S7778; ctranspose(S7778), l7778] >= 0];
Cons = [Cons, diag(S7778-Z7778*l7778)- loads([179, 180, 181]) - diag(v78 * Yloads([179, 180, 181],[179, 180, 181]))  + diag(v78 * Cbus([179, 180, 181],[179, 180, 181])) == diag(S7879) + diag(S7880) + 0];

Cons = [Cons, v79 == v78 - S7879*ctranspose(Z7879) - Z7879*ctranspose(S7879) + Z7879*l7879*ctranspose(Z7879)];
Cons = [Cons, [v78, S7879; ctranspose(S7879), l7879] >= 0];
Cons = [Cons, diag(S7879-Z7879*l7879)- loads([182, 183, 184]) - diag(v79 * Yloads([182, 183, 184],[182, 183, 184]))  + diag(v79 * Cbus([182, 183, 184],[182, 183, 184])) == 0];

Cons = [Cons, v80 == v78 - S7880*ctranspose(Z7880) - Z7880*ctranspose(S7880) + Z7880*l7880*ctranspose(Z7880)];
Cons = [Cons, [v78, S7880; ctranspose(S7880), l7880] >= 0];
Cons = [Cons, diag(S7880-Z7880*l7880)- loads([185, 186, 187]) - diag(v80 * Yloads([185, 186, 187],[185, 186, 187]))  + diag(v80 * Cbus([185, 186, 187],[185, 186, 187])) == diag(S8081) + 0];

Cons = [Cons, v81 == v80 - S8081*ctranspose(Z8081) - Z8081*ctranspose(S8081) + Z8081*l8081*ctranspose(Z8081)];
Cons = [Cons, [v80, S8081; ctranspose(S8081), l8081] >= 0];
Cons = [Cons, diag(S8081-Z8081*l8081)- loads([188, 189, 190]) - diag(v81 * Yloads([188, 189, 190],[188, 189, 190]))  + diag(v81 * Cbus([188, 189, 190],[188, 189, 190])) == diag(S8182) + [0; 0; diag(S8184)] + 0];

Cons = [Cons, v82 == v81 - S8182*ctranspose(Z8182) - Z8182*ctranspose(S8182) + Z8182*l8182*ctranspose(Z8182)];
Cons = [Cons, [v81, S8182; ctranspose(S8182), l8182] >= 0];
Cons = [Cons, diag(S8182-Z8182*l8182)- loads([191, 192, 193]) - diag(v82 * Yloads([191, 192, 193],[191, 192, 193]))  + diag(v82 * Cbus([191, 192, 193],[191, 192, 193])) == diag(S8283) + 0];

Cons = [Cons, v84 == v81([3],[3]) - S8184*ctranspose(Z8184) - Z8184*ctranspose(S8184) + Z8184*l8184*ctranspose(Z8184)];
Cons = [Cons, [v81([3],[3]), S8184; ctranspose(S8184), l8184] >= 0];
Cons = [Cons, diag(S8184-Z8184*l8184)- loads([194]) - diag(v84 * Yloads([194],[194]))  + diag(v84 * Cbus([194],[194])) == diag(S8485) + 0];

Cons = [Cons, v83 == v82 - S8283*ctranspose(Z8283) - Z8283*ctranspose(S8283) + Z8283*l8283*ctranspose(Z8283)];
Cons = [Cons, [v82, S8283; ctranspose(S8283), l8283] >= 0];
Cons = [Cons, diag(S8283-Z8283*l8283)- loads([195, 196, 197]) - diag(v83 * Yloads([195, 196, 197],[195, 196, 197])) + DER83([1, 2, 3]) + diag(v83 * Cbus([195, 196, 197],[195, 196, 197])) == 0];

Cons = [Cons, v85 == v84 - S8485*ctranspose(Z8485) - Z8485*ctranspose(S8485) + Z8485*l8485*ctranspose(Z8485)];
Cons = [Cons, [v84, S8485; ctranspose(S8485), l8485] >= 0];
Cons = [Cons, diag(S8485-Z8485*l8485)- loads([198]) - diag(v85 * Yloads([198],[198]))  + diag(v85 * Cbus([198],[198])) == 0];

Cons = [Cons, v87 == v86 - S8687*ctranspose(Z8687) - Z8687*ctranspose(S8687) + Z8687*l8687*ctranspose(Z8687)];
Cons = [Cons, [v86, S8687; ctranspose(S8687), l8687] >= 0];
Cons = [Cons, diag(S8687-Z8687*l8687)- loads([199, 200, 201]) - diag(v87 * Yloads([199, 200, 201],[199, 200, 201]))  + diag(v87 * Cbus([199, 200, 201],[199, 200, 201])) == [diag(S8788); 0; 0] + diag(S8789) + 0];

Cons = [Cons, v88 == v87([1],[1]) - S8788*ctranspose(Z8788) - Z8788*ctranspose(S8788) + Z8788*l8788*ctranspose(Z8788)];
Cons = [Cons, [v87([1],[1]), S8788; ctranspose(S8788), l8788] >= 0];
Cons = [Cons, diag(S8788-Z8788*l8788)- loads([202]) - diag(v88 * Yloads([202],[202])) + DER88([1]) + diag(v88 * Cbus([202],[202])) == 0];

Cons = [Cons, v89 == v87 - S8789*ctranspose(Z8789) - Z8789*ctranspose(S8789) + Z8789*l8789*ctranspose(Z8789)];
Cons = [Cons, [v87, S8789; ctranspose(S8789), l8789] >= 0];
Cons = [Cons, diag(S8789-Z8789*l8789)- loads([203, 204, 205]) - diag(v89 * Yloads([203, 204, 205],[203, 204, 205]))  + diag(v89 * Cbus([203, 204, 205],[203, 204, 205])) == [0; diag(S8990); 0] + diag(S8991) + 0];

Cons = [Cons, v90 == v89([2],[2]) - S8990*ctranspose(Z8990) - Z8990*ctranspose(S8990) + Z8990*l8990*ctranspose(Z8990)];
Cons = [Cons, [v89([2],[2]), S8990; ctranspose(S8990), l8990] >= 0];
Cons = [Cons, diag(S8990-Z8990*l8990)- loads([206]) - diag(v90 * Yloads([206],[206])) + DER90([2]) + diag(v90 * Cbus([206],[206])) == 0];

Cons = [Cons, v91 == v89 - S8991*ctranspose(Z8991) - Z8991*ctranspose(S8991) + Z8991*l8991*ctranspose(Z8991)];
Cons = [Cons, [v89, S8991; ctranspose(S8991), l8991] >= 0];
Cons = [Cons, diag(S8991-Z8991*l8991)- loads([207, 208, 209]) - diag(v91 * Yloads([207, 208, 209],[207, 208, 209]))  + diag(v91 * Cbus([207, 208, 209],[207, 208, 209])) == [0; 0; diag(S9192)] + diag(S9193) + 0];

Cons = [Cons, v92 == v91([3],[3]) - S9192*ctranspose(Z9192) - Z9192*ctranspose(S9192) + Z9192*l9192*ctranspose(Z9192)];
Cons = [Cons, [v91([3],[3]), S9192; ctranspose(S9192), l9192] >= 0];
Cons = [Cons, diag(S9192-Z9192*l9192)- loads([210]) - diag(v92 * Yloads([210],[210])) + DER92([3]) + diag(v92 * Cbus([210],[210])) == 0];

Cons = [Cons, v93 == v91 - S9193*ctranspose(Z9193) - Z9193*ctranspose(S9193) + Z9193*l9193*ctranspose(Z9193)];
Cons = [Cons, [v91, S9193; ctranspose(S9193), l9193] >= 0];
Cons = [Cons, diag(S9193-Z9193*l9193)- loads([211, 212, 213]) - diag(v93 * Yloads([211, 212, 213],[211, 212, 213]))  + diag(v93 * Cbus([211, 212, 213],[211, 212, 213])) == [diag(S9394); 0; 0] + diag(S9395) + 0];

Cons = [Cons, v94 == v93([1],[1]) - S9394*ctranspose(Z9394) - Z9394*ctranspose(S9394) + Z9394*l9394*ctranspose(Z9394)];
Cons = [Cons, [v93([1],[1]), S9394; ctranspose(S9394), l9394] >= 0];
Cons = [Cons, diag(S9394-Z9394*l9394)- loads([214]) - diag(v94 * Yloads([214],[214]))  + diag(v94 * Cbus([214],[214])) == 0];

Cons = [Cons, v95 == v93 - S9395*ctranspose(Z9395) - Z9395*ctranspose(S9395) + Z9395*l9395*ctranspose(Z9395)];
Cons = [Cons, [v93, S9395; ctranspose(S9395), l9395] >= 0];
Cons = [Cons, diag(S9395-Z9395*l9395)- loads([215, 216, 217]) - diag(v95 * Yloads([215, 216, 217],[215, 216, 217]))  + diag(v95 * Cbus([215, 216, 217],[215, 216, 217])) == [0; diag(S9596); 0] + 0];

Cons = [Cons, v96 == v95([2],[2]) - S9596*ctranspose(Z9596) - Z9596*ctranspose(S9596) + Z9596*l9596*ctranspose(Z9596)];
Cons = [Cons, [v95([2],[2]), S9596; ctranspose(S9596), l9596] >= 0];
Cons = [Cons, diag(S9596-Z9596*l9596)- loads([218]) - diag(v96 * Yloads([218],[218]))  + diag(v96 * Cbus([218],[218])) == 0];

Cons = [Cons, v98 == v97 - S9798*ctranspose(Z9798) - Z9798*ctranspose(S9798) + Z9798*l9798*ctranspose(Z9798)];
Cons = [Cons, [v97, S9798; ctranspose(S9798), l9798] >= 0];
Cons = [Cons, diag(S9798-Z9798*l9798)- loads([219, 220, 221]) - diag(v98 * Yloads([219, 220, 221],[219, 220, 221]))  + diag(v98 * Cbus([219, 220, 221],[219, 220, 221])) == diag(S9899) + 0];

Cons = [Cons, v99 == v98 - S9899*ctranspose(Z9899) - Z9899*ctranspose(S9899) + Z9899*l9899*ctranspose(Z9899)];
Cons = [Cons, [v98, S9899; ctranspose(S9899), l9899] >= 0];
Cons = [Cons, diag(S9899-Z9899*l9899)- loads([222, 223, 224]) - diag(v99 * Yloads([222, 223, 224],[222, 223, 224]))  + diag(v99 * Cbus([222, 223, 224],[222, 223, 224])) == diag(S99100) + 0];

Cons = [Cons, v100 == v99 - S99100*ctranspose(Z99100) - Z99100*ctranspose(S99100) + Z99100*l99100*ctranspose(Z99100)];
Cons = [Cons, [v99, S99100; ctranspose(S99100), l99100] >= 0];
Cons = [Cons, diag(S99100-Z99100*l99100)- loads([225, 226, 227]) - diag(v100 * Yloads([225, 226, 227],[225, 226, 227]))  + diag(v100 * Cbus([225, 226, 227],[225, 226, 227])) == diag(S100450) + 0];

Cons = [Cons, v450 == v100 - S100450*ctranspose(Z100450) - Z100450*ctranspose(S100450) + Z100450*l100450*ctranspose(Z100450)];
Cons = [Cons, [v100, S100450; ctranspose(S100450), l100450] >= 0];
Cons = [Cons, diag(S100450-Z100450*l100450)- loads([228, 229, 230]) - diag(v450 * Yloads([228, 229, 230],[228, 229, 230]))  + diag(v450 * Cbus([228, 229, 230],[228, 229, 230])) == 0];

Cons = [Cons, v102 == v101([3],[3]) - S101102*ctranspose(Z101102) - Z101102*ctranspose(S101102) + Z101102*l101102*ctranspose(Z101102)];
Cons = [Cons, [v101([3],[3]), S101102; ctranspose(S101102), l101102] >= 0];
Cons = [Cons, diag(S101102-Z101102*l101102)- loads([237]) - diag(v102 * Yloads([237],[237]))  + diag(v102 * Cbus([237],[237])) == diag(S102103) + 0];

Cons = [Cons, v105 == v101 - S101105*ctranspose(Z101105) - Z101105*ctranspose(S101105) + Z101105*l101105*ctranspose(Z101105)];
Cons = [Cons, [v101, S101105; ctranspose(S101105), l101105] >= 0];
Cons = [Cons, diag(S101105-Z101105*l101105)- loads([238, 239, 240]) - diag(v105 * Yloads([238, 239, 240],[238, 239, 240]))  + diag(v105 * Cbus([238, 239, 240],[238, 239, 240])) == [0; diag(S105106); 0] + diag(S105108) + 0];

Cons = [Cons, v103 == v102 - S102103*ctranspose(Z102103) - Z102103*ctranspose(S102103) + Z102103*l102103*ctranspose(Z102103)];
Cons = [Cons, [v102, S102103; ctranspose(S102103), l102103] >= 0];
Cons = [Cons, diag(S102103-Z102103*l102103)- loads([241]) - diag(v103 * Yloads([241],[241]))  + diag(v103 * Cbus([241],[241])) == diag(S103104) + 0];

Cons = [Cons, v104 == v103 - S103104*ctranspose(Z103104) - Z103104*ctranspose(S103104) + Z103104*l103104*ctranspose(Z103104)];
Cons = [Cons, [v103, S103104; ctranspose(S103104), l103104] >= 0];
Cons = [Cons, diag(S103104-Z103104*l103104)- loads([242]) - diag(v104 * Yloads([242],[242]))  + diag(v104 * Cbus([242],[242])) == 0];

Cons = [Cons, v106 == v105([2],[2]) - S105106*ctranspose(Z105106) - Z105106*ctranspose(S105106) + Z105106*l105106*ctranspose(Z105106)];
Cons = [Cons, [v105([2],[2]), S105106; ctranspose(S105106), l105106] >= 0];
Cons = [Cons, diag(S105106-Z105106*l105106)- loads([243]) - diag(v106 * Yloads([243],[243]))  + diag(v106 * Cbus([243],[243])) == diag(S106107) + 0];

Cons = [Cons, v108 == v105 - S105108*ctranspose(Z105108) - Z105108*ctranspose(S105108) + Z105108*l105108*ctranspose(Z105108)];
Cons = [Cons, [v105, S105108; ctranspose(S105108), l105108] >= 0];
Cons = [Cons, diag(S105108-Z105108*l105108)- loads([244, 245, 246]) - diag(v108 * Yloads([244, 245, 246],[244, 245, 246]))  + diag(v108 * Cbus([244, 245, 246],[244, 245, 246])) == [diag(S108109); 0; 0] + diag(S108300) + 0];

Cons = [Cons, v107 == v106 - S106107*ctranspose(Z106107) - Z106107*ctranspose(S106107) + Z106107*l106107*ctranspose(Z106107)];
Cons = [Cons, [v106, S106107; ctranspose(S106107), l106107] >= 0];
Cons = [Cons, diag(S106107-Z106107*l106107)- loads([247]) - diag(v107 * Yloads([247],[247]))  + diag(v107 * Cbus([247],[247])) == 0];

Cons = [Cons, v109 == v108([1],[1]) - S108109*ctranspose(Z108109) - Z108109*ctranspose(S108109) + Z108109*l108109*ctranspose(Z108109)];
Cons = [Cons, [v108([1],[1]), S108109; ctranspose(S108109), l108109] >= 0];
Cons = [Cons, diag(S108109-Z108109*l108109)- loads([248]) - diag(v109 * Yloads([248],[248]))  + diag(v109 * Cbus([248],[248])) == diag(S109110) + 0];

Cons = [Cons, v300 == v108 - S108300*ctranspose(Z108300) - Z108300*ctranspose(S108300) + Z108300*l108300*ctranspose(Z108300)];
Cons = [Cons, [v108, S108300; ctranspose(S108300), l108300] >= 0];
Cons = [Cons, diag(S108300-Z108300*l108300)- loads([249, 250, 251]) - diag(v300 * Yloads([249, 250, 251],[249, 250, 251]))  + diag(v300 * Cbus([249, 250, 251],[249, 250, 251])) == 0];

Cons = [Cons, v110 == v109 - S109110*ctranspose(Z109110) - Z109110*ctranspose(S109110) + Z109110*l109110*ctranspose(Z109110)];
Cons = [Cons, [v109, S109110; ctranspose(S109110), l109110] >= 0];
Cons = [Cons, diag(S109110-Z109110*l109110)- loads([252]) - diag(v110 * Yloads([252],[252]))  + diag(v110 * Cbus([252],[252])) == diag(S110111) + diag(S110112) + 0];

Cons = [Cons, v111 == v110 - S110111*ctranspose(Z110111) - Z110111*ctranspose(S110111) + Z110111*l110111*ctranspose(Z110111)];
Cons = [Cons, [v110, S110111; ctranspose(S110111), l110111] >= 0];
Cons = [Cons, diag(S110111-Z110111*l110111)- loads([253]) - diag(v111 * Yloads([253],[253]))  + diag(v111 * Cbus([253],[253])) == 0];

Cons = [Cons, v112 == v110 - S110112*ctranspose(Z110112) - Z110112*ctranspose(S110112) + Z110112*l110112*ctranspose(Z110112)];
Cons = [Cons, [v110, S110112; ctranspose(S110112), l110112] >= 0];
Cons = [Cons, diag(S110112-Z110112*l110112)- loads([254]) - diag(v112 * Yloads([254],[254]))  + diag(v112 * Cbus([254],[254])) == diag(S112113) + 0];

Cons = [Cons, v113 == v112 - S112113*ctranspose(Z112113) - Z112113*ctranspose(S112113) + Z112113*l112113*ctranspose(Z112113)];
Cons = [Cons, [v112, S112113; ctranspose(S112113), l112113] >= 0];
Cons = [Cons, diag(S112113-Z112113*l112113)- loads([255]) - diag(v113 * Yloads([255],[255]))  + diag(v113 * Cbus([255],[255])) == diag(S113114) + 0];

Cons = [Cons, v114 == v113 - S113114*ctranspose(Z113114) - Z113114*ctranspose(S113114) + Z113114*l113114*ctranspose(Z113114)];
Cons = [Cons, [v113, S113114; ctranspose(S113114), l113114] >= 0];
Cons = [Cons, diag(S113114-Z113114*l113114)- loads([256]) - diag(v114 * Yloads([256],[256]))  + diag(v114 * Cbus([256],[256])) == 0];

Cons = [Cons, v35 == v135 - S13535*ctranspose(Z13535) - Z13535*ctranspose(S13535) + Z13535*l13535*ctranspose(Z13535)];
Cons = [Cons, [v135, S13535; ctranspose(S13535), l13535] >= 0];
Cons = [Cons, diag(S13535-Z13535*l13535)- loads([74, 75, 78]) - diag(v35 * Yloads([74, 75, 78],[74, 75, 78]))  + diag(v35 * Cbus([74, 75, 78],[74, 75, 78])) == [diag(S3536); 0] + diag(S3540) + 0];

Cons = [Cons, v1 == v149 - S1491*ctranspose(Z1491) - Z1491*ctranspose(S1491) + Z1491*l1491*ctranspose(Z1491)];
Cons = [Cons, [v149, S1491; ctranspose(S1491), l1491] >= 0];
Cons = [Cons, diag(S1491-Z1491*l1491)- loads([10, 11, 12]) - diag(v1 * Yloads([10, 11, 12],[10, 11, 12]))  + diag(v1 * Cbus([10, 11, 12],[10, 11, 12])) == [0; diag(S12); 0] + [0; 0; diag(S13)] + diag(S17) + 0];

Cons = [Cons, v52 == v152 - S15252*ctranspose(Z15252) - Z15252*ctranspose(S15252) + Z15252*l15252*ctranspose(Z15252)];
Cons = [Cons, [v152, S15252; ctranspose(S15252), l15252] >= 0];
Cons = [Cons, diag(S15252-Z15252*l15252)- loads([113, 114, 115]) - diag(v52 * Yloads([113, 114, 115],[113, 114, 115]))  + diag(v52 * Cbus([113, 114, 115],[113, 114, 115])) == diag(S5253) + 0];

Cons = [Cons, v67 == v160R - S160R67*ctranspose(Z160R67) - Z160R67*ctranspose(S160R67) + Z160R67*l160R67*ctranspose(Z160R67)];
Cons = [Cons, [v160R, S160R67; ctranspose(S160R67), l160R67] >= 0];
Cons = [Cons, diag(S160R67-Z160R67*l160R67)- loads([154, 156, 157]) - diag(v67 * Yloads([154, 156, 157],[154, 156, 157]))  + diag(v67 * Cbus([154, 156, 157],[154, 156, 157])) == [diag(S6768); 0; 0] + diag(S6772) + diag(S6797) + 0];

Cons = [Cons, v101 == v197 - S197101*ctranspose(Z197101) - Z197101*ctranspose(S197101) + Z197101*l197101*ctranspose(Z197101)];
Cons = [Cons, [v197, S197101; ctranspose(S197101), l197101] >= 0];
Cons = [Cons, diag(S197101-Z197101*l197101)- loads([234, 235, 236]) - diag(v101 * Yloads([234, 235, 236],[234, 235, 236]))  + diag(v101 * Cbus([234, 235, 236],[234, 235, 236])) == [0; 0; diag(S101102)] + diag(S101105) + 0];

Cons = [Cons, v151 == v51 - S51151*ctranspose(Z51151) - Z51151*ctranspose(S51151) + Z51151*l51151*ctranspose(Z51151)];
Cons = [Cons, [v51, S51151; ctranspose(S51151), l51151] >= 0];
Cons = [Cons, diag(S51151-Z51151*l51151)- loads([110, 111, 112]) - diag(v151 * Yloads([110, 111, 112],[110, 111, 112]))  + diag(v151 * Cbus([110, 111, 112],[110, 111, 112])) == diag(S151300_OPEN) + 0];

Cons = [Cons, v150R == (v150([1, 2, 3],[1, 2, 3]) - S150150R*ctranspose(Z150150R) - Z150150R*ctranspose(S150150R) + Z150150R*l150150R*ctranspose(Z150150R)) .* alphaM150R];
Cons = [Cons, [v150([1, 2, 3],[1, 2, 3]), S150150R; ctranspose(S150150R), l150150R] >= 0];
Cons = [Cons, diag(S150150R-Z150150R*l150150R)- loads([4, 5, 6]) - diag(v150R * Yloads([4, 5, 6],[4, 5, 6]))  + diag(v150R * Cbus([4, 5, 6],[4, 5, 6])) == diag(S150R149) + 0];

Cons = [Cons, v9R == (v9([1],[1]) - S99R*ctranspose(Z99R) - Z99R*ctranspose(S99R) + Z99R*l99R*ctranspose(Z99R)) .* alphaM9R];
Cons = [Cons, [v9([1],[1]), S99R; ctranspose(S99R), l99R] >= 0];
Cons = [Cons, diag(S99R-Z99R*l99R)- loads([29]) - diag(v9R * Yloads([29],[29]))  + diag(v9R * Cbus([29],[29])) == diag(S9R14) + 0];

Cons = [Cons, v25R == (v25([1, 3],[1, 3]) - S2525R*ctranspose(Z2525R) - Z2525R*ctranspose(S2525R) + Z2525R*l2525R*ctranspose(Z2525R)) .* alphaM25R];
Cons = [Cons, [v25([1, 3],[1, 3]), S2525R; ctranspose(S2525R), l2525R] >= 0];
Cons = [Cons, diag(S2525R-Z2525R*l2525R)- loads([53, 54]) - diag(v25R * Yloads([53, 54],[53, 54]))  + diag(v25R * Cbus([53, 54],[53, 54])) == diag(S25R26) + 0];

Cons = [Cons, v160R == (v160([1, 2, 3],[1, 2, 3]) - S160160R*ctranspose(Z160160R) - Z160160R*ctranspose(S160160R) + Z160160R*l160160R*ctranspose(Z160160R)) .* alphaM160R];
Cons = [Cons, [v160([1, 2, 3],[1, 2, 3]), S160160R; ctranspose(S160160R), l160160R] >= 0];
Cons = [Cons, diag(S160160R-Z160160R*l160160R)- loads([263, 264, 265]) - diag(v160R * Yloads([263, 264, 265],[263, 264, 265]))  + diag(v160R * Cbus([263, 264, 265],[263, 264, 265])) == diag(S160R67) + 0];

Cons = [Cons, v610 == v61S - S61S610*ctranspose(Z61S610) - Z61S610*ctranspose(S61S610) + Z61S610*l61S610*ctranspose(Z61S610)];
Cons = [Cons, [v61S, S61S610; ctranspose(S61S610), l61S610] >= 0];
Cons = [Cons, diag(S61S610-Z61S610*l61S610)- loads([276, 277, 278]) - diag(v610 * Yloads([276, 277, 278],[276, 277, 278]))  + diag(v610 * Cbus([276, 277, 278],[276, 277, 278])) == 0];

Cons = [Cons, v149 == v150R - S150R149*ctranspose(Z150R149) - Z150R149*ctranspose(S150R149) + Z150R149*l150R149*ctranspose(Z150R149)];
Cons = [Cons, [v150R, S150R149; ctranspose(S150R149), l150R149] >= 0];
Cons = [Cons, diag(S150R149-Z150R149*l150R149)- loads([7, 8, 9]) - diag(v149 * Yloads([7, 8, 9],[7, 8, 9]))  + diag(v149 * Cbus([7, 8, 9],[7, 8, 9])) == diag(S1491) + 0];

Cons = [Cons, v152 == v13 - S13152*ctranspose(Z13152) - Z13152*ctranspose(S13152) + Z13152*l13152*ctranspose(Z13152)];
Cons = [Cons, [v13, S13152; ctranspose(S13152), l13152] >= 0];
Cons = [Cons, diag(S13152-Z13152*l13152)- loads([260, 261, 262]) - diag(v152 * Yloads([260, 261, 262],[260, 261, 262]))  + diag(v152 * Cbus([260, 261, 262],[260, 261, 262])) == diag(S15252) + 0];

Cons = [Cons, v135 == v18 - S18135*ctranspose(Z18135) - Z18135*ctranspose(S18135) + Z18135*l18135*ctranspose(Z18135)];
Cons = [Cons, [v18, S18135; ctranspose(S18135), l18135] >= 0];
Cons = [Cons, diag(S18135-Z18135*l18135)- loads([257, 258, 259]) - diag(v135 * Yloads([257, 258, 259],[257, 258, 259]))  + diag(v135 * Cbus([257, 258, 259],[257, 258, 259])) == diag(S13535) + 0];

Cons = [Cons, v160 == v60 - S60160*ctranspose(Z60160) - Z60160*ctranspose(S60160) + Z60160*l60160*ctranspose(Z60160)];
Cons = [Cons, [v60, S60160; ctranspose(S60160), l60160] >= 0];
Cons = [Cons, diag(S60160-Z60160*l60160)- loads([266, 267, 268]) - diag(v160 * Yloads([266, 267, 268],[266, 267, 268]))  + diag(v160 * Cbus([266, 267, 268],[266, 267, 268])) == diag(S160160R) + 0];

Cons = [Cons, v197 == v97 - S97197*ctranspose(Z97197) - Z97197*ctranspose(S97197) + Z97197*l97197*ctranspose(Z97197)];
Cons = [Cons, [v97, S97197; ctranspose(S97197), l97197] >= 0];
Cons = [Cons, diag(S97197-Z97197*l97197)- loads([231, 232, 233]) - diag(v197 * Yloads([231, 232, 233],[231, 232, 233]))  + diag(v197 * Cbus([231, 232, 233],[231, 232, 233])) == diag(S197101) + 0];

Cons = [Cons, v61S == v61 - S6161S*ctranspose(Z6161S) - Z6161S*ctranspose(S6161S) + Z6161S*l6161S*ctranspose(Z6161S)];
Cons = [Cons, [v61, S6161S; ctranspose(S6161S), l6161S] >= 0];
Cons = [Cons, diag(S6161S-Z6161S*l6161S)- loads([269, 270, 271]) - diag(v61S * Yloads([269, 270, 271],[269, 270, 271]))  + diag(v61S * Cbus([269, 270, 271],[269, 270, 271])) == diag(S61S610) + 0];

Cons = [Cons, v300_OPEN == v151 - S151300_OPEN*ctranspose(Z151300_OPEN) - Z151300_OPEN*ctranspose(S151300_OPEN) + Z151300_OPEN*l151300_OPEN*ctranspose(Z151300_OPEN)];
Cons = [Cons, [v151, S151300_OPEN; ctranspose(S151300_OPEN), l151300_OPEN] >= 0];
Cons = [Cons, diag(S151300_OPEN-Z151300_OPEN*l151300_OPEN)- loads([272, 273, 274]) - diag(v300_OPEN * Yloads([272, 273, 274],[272, 273, 274]))  + diag(v300_OPEN * Cbus([272, 273, 274],[272, 273, 274])) == 0];

Cons = [Cons, v94_OPEN == v54([1],[1]) - S5494_OPEN*ctranspose(Z5494_OPEN) - Z5494_OPEN*ctranspose(S5494_OPEN) + Z5494_OPEN*l5494_OPEN*ctranspose(Z5494_OPEN)];
Cons = [Cons, [v54([1],[1]), S5494_OPEN; ctranspose(S5494_OPEN), l5494_OPEN] >= 0];
Cons = [Cons, diag(S5494_OPEN-Z5494_OPEN*l5494_OPEN)- loads([275]) - diag(v94_OPEN * Yloads([275],[275]))  + diag(v94_OPEN * Cbus([275],[275])) == 0];


% (5): DER power constriants 
Cons = [Cons, 0 <= real(DER83(1)) <= 90000.0];
Cons = [Cons, 0 <= real(DER83(2)) <= 90000.0];
Cons = [Cons, 0 <= real(DER83(3)) <= 90000.0];
Cons = [Cons, imag(DER83(1)) == real(DER83(1)) * 0.484322104838];
Cons = [Cons, imag(DER83(2)) == real(DER83(2)) * 0.484322104838];
Cons = [Cons, imag(DER83(3)) == real(DER83(3)) * 0.484322104838];

Cons = [Cons, 0 <= real(DER88(1)) <= 45000.0];
Cons = [Cons, 0 <= real(DER88(2)) <= 0.0];
Cons = [Cons, 0 <= real(DER88(3)) <= 0.0];
Cons = [Cons, imag(DER88(1)) == real(DER88(1)) * 0.484322104838];
Cons = [Cons, imag(DER88(2)) == real(DER88(2)) * 0.484322104838];
Cons = [Cons, imag(DER88(3)) == real(DER88(3)) * 0.484322104838];

Cons = [Cons, 0 <= real(DER90(1)) <= 0.0];
Cons = [Cons, 0 <= real(DER90(2)) <= 45000.0];
Cons = [Cons, 0 <= real(DER90(3)) <= 0.0];
Cons = [Cons, imag(DER90(1)) == real(DER90(1)) * 0.484322104838];
Cons = [Cons, imag(DER90(2)) == real(DER90(2)) * 0.484322104838];
Cons = [Cons, imag(DER90(3)) == real(DER90(3)) * 0.484322104838];

Cons = [Cons, 0 <= real(DER92(1)) <= 0.0];
Cons = [Cons, 0 <= real(DER92(2)) <= 0.0];
Cons = [Cons, 0 <= real(DER92(3)) <= 45000.0];
Cons = [Cons, imag(DER92(1)) == real(DER92(1)) * 0.484322104838];
Cons = [Cons, imag(DER92(2)) == real(DER92(2)) * 0.484322104838];
Cons = [Cons, imag(DER92(3)) == real(DER92(3)) * 0.484322104838];


Ze6783 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Ze6788 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8788 + 0;
Ze6790 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze6792 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(154) == DER83(1) * Ze6783(1, 1)' + Ze6783(1, 1) * DER83(1)' + DER88(1) * Ze6788(1, 1)' + Ze6788(1, 1) * DER88(1)' + DER90(1) * Ze6790(1, 1)' + Ze6790(1, 1) * DER90(1)' + DER92(1) * Ze6792(1, 1)' + Ze6792(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(156) == DER83(2) * Ze6783(2, 2)' + Ze6783(2, 2) * DER83(2)' + DER88(2) * Ze6788(2, 2)' + Ze6788(2, 2) * DER88(2)' + DER90(2) * Ze6790(2, 2)' + Ze6790(2, 2) * DER90(2)' + DER92(2) * Ze6792(2, 2)' + Ze6792(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(157) ==DER83(3) * Ze6783(3, 3)' + Ze6783(3, 3) * DER83(3)' + DER88(3) * Ze6788(3, 3)' + Ze6788(3, 3) * DER88(3)' + DER90(3) * Ze6790(3, 3)' + Ze6790(3, 3) * DER90(3)' + DER92(3) * Ze6792(3, 3)' + Ze6792(3, 3) * DER92(3)' + 0];

Ze7883 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Cons = [Cons, DeltaV(179) == DER83(1) * Ze7883(1, 1)' + Ze7883(1, 1) * DER83(1)' + 0];
Cons = [Cons, DeltaV(180) == DER83(2) * Ze7883(2, 2)' + Ze7883(2, 2) * DER83(2)' + 0];
Cons = [Cons, DeltaV(181) ==DER83(3) * Ze7883(3, 3)' + Ze7883(3, 3) * DER83(3)' + 0];

Ze15283 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Ze15288 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8788 + 0;
Ze15290 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze15292 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(260) == DER83(1) * Ze15283(1, 1)' + Ze15283(1, 1) * DER83(1)' + DER88(1) * Ze15288(1, 1)' + Ze15288(1, 1) * DER88(1)' + DER90(1) * Ze15290(1, 1)' + Ze15290(1, 1) * DER90(1)' + DER92(1) * Ze15292(1, 1)' + Ze15292(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(261) == DER83(2) * Ze15283(2, 2)' + Ze15283(2, 2) * DER83(2)' + DER88(2) * Ze15288(2, 2)' + Ze15288(2, 2) * DER88(2)' + DER90(2) * Ze15290(2, 2)' + Ze15290(2, 2) * DER90(2)' + DER92(2) * Ze15292(2, 2)' + Ze15292(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(262) ==DER83(3) * Ze15283(3, 3)' + Ze15283(3, 3) * DER83(3)' + DER88(3) * Ze15288(3, 3)' + Ze15288(3, 3) * DER88(3)' + DER90(3) * Ze15290(3, 3)' + Ze15290(3, 3) * DER90(3)' + DER92(3) * Ze15292(3, 3)' + Ze15292(3, 3) * DER92(3)' + 0];

Ze8283 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Cons = [Cons, DeltaV(191) == DER83(1) * Ze8283(1, 1)' + Ze8283(1, 1) * DER83(1)' + 0];
Cons = [Cons, DeltaV(192) == DER83(2) * Ze8283(2, 2)' + Ze8283(2, 2) * DER83(2)' + 0];
Cons = [Cons, DeltaV(193) ==DER83(3) * Ze8283(3, 3)' + Ze8283(3, 3) * DER83(3)' + 0];

Ze14983 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Ze14988 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8788 + 0;
Ze14990 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze14992 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(7) == DER83(1) * Ze14983(1, 1)' + Ze14983(1, 1) * DER83(1)' + DER88(1) * Ze14988(1, 1)' + Ze14988(1, 1) * DER88(1)' + DER90(1) * Ze14990(1, 1)' + Ze14990(1, 1) * DER90(1)' + DER92(1) * Ze14992(1, 1)' + Ze14992(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(8) == DER83(2) * Ze14983(2, 2)' + Ze14983(2, 2) * DER83(2)' + DER88(2) * Ze14988(2, 2)' + Ze14988(2, 2) * DER88(2)' + DER90(2) * Ze14990(2, 2)' + Ze14990(2, 2) * DER90(2)' + DER92(2) * Ze14992(2, 2)' + Ze14992(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(9) ==DER83(3) * Ze14983(3, 3)' + Ze14983(3, 3) * DER83(3)' + DER88(3) * Ze14988(3, 3)' + Ze14988(3, 3) * DER88(3)' + DER90(3) * Ze14990(3, 3)' + Ze14990(3, 3) * DER90(3)' + DER92(3) * Ze14992(3, 3)' + Ze14992(3, 3) * DER92(3)' + 0];

Ze6083 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Ze6088 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8788 + 0;
Ze6090 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze6092 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(132) == DER83(1) * Ze6083(1, 1)' + Ze6083(1, 1) * DER83(1)' + DER88(1) * Ze6088(1, 1)' + Ze6088(1, 1) * DER88(1)' + DER90(1) * Ze6090(1, 1)' + Ze6090(1, 1) * DER90(1)' + DER92(1) * Ze6092(1, 1)' + Ze6092(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(133) == DER83(2) * Ze6083(2, 2)' + Ze6083(2, 2) * DER83(2)' + DER88(2) * Ze6088(2, 2)' + Ze6088(2, 2) * DER88(2)' + DER90(2) * Ze6090(2, 2)' + Ze6090(2, 2) * DER90(2)' + DER92(2) * Ze6092(2, 2)' + Ze6092(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(134) ==DER83(3) * Ze6083(3, 3)' + Ze6083(3, 3) * DER83(3)' + DER88(3) * Ze6088(3, 3)' + Ze6088(3, 3) * DER88(3)' + DER90(3) * Ze6090(3, 3)' + Ze6090(3, 3) * DER90(3)' + DER92(3) * Ze6092(3, 3)' + Ze6092(3, 3) * DER92(3)' + 0];

Ze5383 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Ze5388 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8788 + 0;
Ze5390 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze5392 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(116) == DER83(1) * Ze5383(1, 1)' + Ze5383(1, 1) * DER83(1)' + DER88(1) * Ze5388(1, 1)' + Ze5388(1, 1) * DER88(1)' + DER90(1) * Ze5390(1, 1)' + Ze5390(1, 1) * DER90(1)' + DER92(1) * Ze5392(1, 1)' + Ze5392(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(117) == DER83(2) * Ze5383(2, 2)' + Ze5383(2, 2) * DER83(2)' + DER88(2) * Ze5388(2, 2)' + Ze5388(2, 2) * DER88(2)' + DER90(2) * Ze5390(2, 2)' + Ze5390(2, 2) * DER90(2)' + DER92(2) * Ze5392(2, 2)' + Ze5392(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(118) ==DER83(3) * Ze5383(3, 3)' + Ze5383(3, 3) * DER83(3)' + DER88(3) * Ze5388(3, 3)' + Ze5388(3, 3) * DER88(3)' + DER90(3) * Ze5390(3, 3)' + Ze5390(3, 3) * DER90(3)' + DER92(3) * Ze5392(3, 3)' + Ze5392(3, 3) * DER92(3)' + 0];

Ze16083 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Ze16088 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8788 + 0;
Ze16090 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze16092 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(266) == DER83(1) * Ze16083(1, 1)' + Ze16083(1, 1) * DER83(1)' + DER88(1) * Ze16088(1, 1)' + Ze16088(1, 1) * DER88(1)' + DER90(1) * Ze16090(1, 1)' + Ze16090(1, 1) * DER90(1)' + DER92(1) * Ze16092(1, 1)' + Ze16092(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(267) == DER83(2) * Ze16083(2, 2)' + Ze16083(2, 2) * DER83(2)' + DER88(2) * Ze16088(2, 2)' + Ze16088(2, 2) * DER88(2)' + DER90(2) * Ze16090(2, 2)' + Ze16090(2, 2) * DER90(2)' + DER92(2) * Ze16092(2, 2)' + Ze16092(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(268) ==DER83(3) * Ze16083(3, 3)' + Ze16083(3, 3) * DER83(3)' + DER88(3) * Ze16088(3, 3)' + Ze16088(3, 3) * DER88(3)' + DER90(3) * Ze16090(3, 3)' + Ze16090(3, 3) * DER90(3)' + DER92(3) * Ze16092(3, 3)' + Ze16092(3, 3) * DER92(3)' + 0];

Ze1383 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Ze1388 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8788 + 0;
Ze1390 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze1392 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(26) == DER83(1) * Ze1383(1, 1)' + Ze1383(1, 1) * DER83(1)' + DER88(1) * Ze1388(1, 1)' + Ze1388(1, 1) * DER88(1)' + DER90(1) * Ze1390(1, 1)' + Ze1390(1, 1) * DER90(1)' + DER92(1) * Ze1392(1, 1)' + Ze1392(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(27) == DER83(2) * Ze1383(2, 2)' + Ze1383(2, 2) * DER83(2)' + DER88(2) * Ze1388(2, 2)' + Ze1388(2, 2) * DER88(2)' + DER90(2) * Ze1390(2, 2)' + Ze1390(2, 2) * DER90(2)' + DER92(2) * Ze1392(2, 2)' + Ze1392(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(28) ==DER83(3) * Ze1383(3, 3)' + Ze1383(3, 3) * DER83(3)' + DER88(3) * Ze1388(3, 3)' + Ze1388(3, 3) * DER88(3)' + DER90(3) * Ze1390(3, 3)' + Ze1390(3, 3) * DER90(3)' + DER92(3) * Ze1392(3, 3)' + Ze1392(3, 3) * DER92(3)' + 0];

Ze8688 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8788 + 0;
Ze8690 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze8692 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(176) == DER88(1) * Ze8688(1, 1)' + Ze8688(1, 1) * DER88(1)' + DER90(1) * Ze8690(1, 1)' + Ze8690(1, 1) * DER90(1)' + DER92(1) * Ze8692(1, 1)' + Ze8692(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(177) == DER88(2) * Ze8688(2, 2)' + Ze8688(2, 2) * DER88(2)' + DER90(2) * Ze8690(2, 2)' + Ze8690(2, 2) * DER90(2)' + DER92(2) * Ze8692(2, 2)' + Ze8692(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(178) ==DER88(3) * Ze8688(3, 3)' + Ze8688(3, 3) * DER88(3)' + DER90(3) * Ze8690(3, 3)' + Ze8690(3, 3) * DER90(3)' + DER92(3) * Ze8692(3, 3)' + Ze8692(3, 3) * DER92(3)' + 0];

Ze183 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Ze188 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8788 + 0;
Ze190 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze192 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(10) == DER83(1) * Ze183(1, 1)' + Ze183(1, 1) * DER83(1)' + DER88(1) * Ze188(1, 1)' + Ze188(1, 1) * DER88(1)' + DER90(1) * Ze190(1, 1)' + Ze190(1, 1) * DER90(1)' + DER92(1) * Ze192(1, 1)' + Ze192(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(11) == DER83(2) * Ze183(2, 2)' + Ze183(2, 2) * DER83(2)' + DER88(2) * Ze188(2, 2)' + Ze188(2, 2) * DER88(2)' + DER90(2) * Ze190(2, 2)' + Ze190(2, 2) * DER90(2)' + DER92(2) * Ze192(2, 2)' + Ze192(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(12) ==DER83(3) * Ze183(3, 3)' + Ze183(3, 3) * DER83(3)' + DER88(3) * Ze188(3, 3)' + Ze188(3, 3) * DER88(3)' + DER90(3) * Ze190(3, 3)' + Ze190(3, 3) * DER90(3)' + DER92(3) * Ze192(3, 3)' + Ze192(3, 3) * DER92(3)' + 0];

Ze15083 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Ze15088 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8788 + 0;
Ze15090 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze15092 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(1) == DER83(1) * Ze15083(1, 1)' + Ze15083(1, 1) * DER83(1)' + DER88(1) * Ze15088(1, 1)' + Ze15088(1, 1) * DER88(1)' + DER90(1) * Ze15090(1, 1)' + Ze15090(1, 1) * DER90(1)' + DER92(1) * Ze15092(1, 1)' + Ze15092(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(2) == DER83(2) * Ze15083(2, 2)' + Ze15083(2, 2) * DER83(2)' + DER88(2) * Ze15088(2, 2)' + Ze15088(2, 2) * DER88(2)' + DER90(2) * Ze15090(2, 2)' + Ze15090(2, 2) * DER90(2)' + DER92(2) * Ze15092(2, 2)' + Ze15092(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(3) ==DER83(3) * Ze15083(3, 3)' + Ze15083(3, 3) * DER83(3)' + DER88(3) * Ze15088(3, 3)' + Ze15088(3, 3) * DER88(3)' + DER90(3) * Ze15090(3, 3)' + Ze15090(3, 3) * DER90(3)' + DER92(3) * Ze15092(3, 3)' + Ze15092(3, 3) * DER92(3)' + 0];

Ze5783 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Ze5788 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8788 + 0;
Ze5790 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze5792 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(125) == DER83(1) * Ze5783(1, 1)' + Ze5783(1, 1) * DER83(1)' + DER88(1) * Ze5788(1, 1)' + Ze5788(1, 1) * DER88(1)' + DER90(1) * Ze5790(1, 1)' + Ze5790(1, 1) * DER90(1)' + DER92(1) * Ze5792(1, 1)' + Ze5792(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(126) == DER83(2) * Ze5783(2, 2)' + Ze5783(2, 2) * DER83(2)' + DER88(2) * Ze5788(2, 2)' + Ze5788(2, 2) * DER88(2)' + DER90(2) * Ze5790(2, 2)' + Ze5790(2, 2) * DER90(2)' + DER92(2) * Ze5792(2, 2)' + Ze5792(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(127) ==DER83(3) * Ze5783(3, 3)' + Ze5783(3, 3) * DER83(3)' + DER88(3) * Ze5788(3, 3)' + Ze5788(3, 3) * DER88(3)' + DER90(3) * Ze5790(3, 3)' + Ze5790(3, 3) * DER90(3)' + DER92(3) * Ze5792(3, 3)' + Ze5792(3, 3) * DER92(3)' + 0];

Ze7783 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Cons = [Cons, DeltaV(173) == DER83(1) * Ze7783(1, 1)' + Ze7783(1, 1) * DER83(1)' + 0];
Cons = [Cons, DeltaV(174) == DER83(2) * Ze7783(2, 2)' + Ze7783(2, 2) * DER83(2)' + 0];
Cons = [Cons, DeltaV(175) ==DER83(3) * Ze7783(3, 3)' + Ze7783(3, 3) * DER83(3)' + 0];

Ze8183 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Cons = [Cons, DeltaV(188) == DER83(1) * Ze8183(1, 1)' + Ze8183(1, 1) * DER83(1)' + 0];
Cons = [Cons, DeltaV(189) == DER83(2) * Ze8183(2, 2)' + Ze8183(2, 2) * DER83(2)' + 0];
Cons = [Cons, DeltaV(190) ==DER83(3) * Ze8183(3, 3)' + Ze8183(3, 3) * DER83(3)' + 0];

Ze7683 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Ze7688 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8788 + 0;
Ze7690 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze7692 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(168) == DER83(1) * Ze7683(1, 1)' + Ze7683(1, 1) * DER83(1)' + DER88(1) * Ze7688(1, 1)' + Ze7688(1, 1) * DER88(1)' + DER90(1) * Ze7690(1, 1)' + Ze7690(1, 1) * DER90(1)' + DER92(1) * Ze7692(1, 1)' + Ze7692(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(169) == DER83(2) * Ze7683(2, 2)' + Ze7683(2, 2) * DER83(2)' + DER88(2) * Ze7688(2, 2)' + Ze7688(2, 2) * DER88(2)' + DER90(2) * Ze7690(2, 2)' + Ze7690(2, 2) * DER90(2)' + DER92(2) * Ze7692(2, 2)' + Ze7692(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(170) ==DER83(3) * Ze7683(3, 3)' + Ze7683(3, 3) * DER83(3)' + DER88(3) * Ze7688(3, 3)' + Ze7688(3, 3) * DER88(3)' + DER90(3) * Ze7690(3, 3)' + Ze7690(3, 3) * DER90(3)' + DER92(3) * Ze7692(3, 3)' + Ze7692(3, 3) * DER92(3)' + 0];

Ze150R83 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Ze150R88 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8788 + 0;
Ze150R90 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze150R92 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(4) == DER83(1) * Ze150R83(1, 1)' + Ze150R83(1, 1) * DER83(1)' + DER88(1) * Ze150R88(1, 1)' + Ze150R88(1, 1) * DER88(1)' + DER90(1) * Ze150R90(1, 1)' + Ze150R90(1, 1) * DER90(1)' + DER92(1) * Ze150R92(1, 1)' + Ze150R92(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(5) == DER83(2) * Ze150R83(2, 2)' + Ze150R83(2, 2) * DER83(2)' + DER88(2) * Ze150R88(2, 2)' + Ze150R88(2, 2) * DER88(2)' + DER90(2) * Ze150R90(2, 2)' + Ze150R90(2, 2) * DER90(2)' + DER92(2) * Ze150R92(2, 2)' + Ze150R92(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(6) ==DER83(3) * Ze150R83(3, 3)' + Ze150R83(3, 3) * DER83(3)' + DER88(3) * Ze150R88(3, 3)' + Ze150R88(3, 3) * DER88(3)' + DER90(3) * Ze150R90(3, 3)' + Ze150R90(3, 3) * DER90(3)' + DER92(3) * Ze150R92(3, 3)' + Ze150R92(3, 3) * DER92(3)' + 0];

Ze9192 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(207) == DER92(1) * Ze9192(1, 1)' + Ze9192(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(208) == DER92(2) * Ze9192(2, 2)' + Ze9192(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(209) ==DER92(3) * Ze9192(3, 3)' + Ze9192(3, 3) * DER92(3)' + 0];

Ze8990 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze8992 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(203) == DER90(1) * Ze8990(1, 1)' + Ze8990(1, 1) * DER90(1)' + DER92(1) * Ze8992(1, 1)' + Ze8992(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(204) == DER90(2) * Ze8990(2, 2)' + Ze8990(2, 2) * DER90(2)' + DER92(2) * Ze8992(2, 2)' + Ze8992(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(205) ==DER90(3) * Ze8990(3, 3)' + Ze8990(3, 3) * DER90(3)' + DER92(3) * Ze8992(3, 3)' + Ze8992(3, 3) * DER92(3)' + 0];

Ze160R83 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Ze160R88 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8788 + 0;
Ze160R90 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze160R92 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(263) == DER83(1) * Ze160R83(1, 1)' + Ze160R83(1, 1) * DER83(1)' + DER88(1) * Ze160R88(1, 1)' + Ze160R88(1, 1) * DER88(1)' + DER90(1) * Ze160R90(1, 1)' + Ze160R90(1, 1) * DER90(1)' + DER92(1) * Ze160R92(1, 1)' + Ze160R92(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(264) == DER83(2) * Ze160R83(2, 2)' + Ze160R83(2, 2) * DER83(2)' + DER88(2) * Ze160R88(2, 2)' + Ze160R88(2, 2) * DER88(2)' + DER90(2) * Ze160R90(2, 2)' + Ze160R90(2, 2) * DER90(2)' + DER92(2) * Ze160R92(2, 2)' + Ze160R92(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(265) ==DER83(3) * Ze160R83(3, 3)' + Ze160R83(3, 3) * DER83(3)' + DER88(3) * Ze160R88(3, 3)' + Ze160R88(3, 3) * DER88(3)' + DER90(3) * Ze160R90(3, 3)' + Ze160R90(3, 3) * DER90(3)' + DER92(3) * Ze160R92(3, 3)' + Ze160R92(3, 3) * DER92(3)' + 0];

Ze5283 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Ze5288 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8788 + 0;
Ze5290 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze5292 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(113) == DER83(1) * Ze5283(1, 1)' + Ze5283(1, 1) * DER83(1)' + DER88(1) * Ze5288(1, 1)' + Ze5288(1, 1) * DER88(1)' + DER90(1) * Ze5290(1, 1)' + Ze5290(1, 1) * DER90(1)' + DER92(1) * Ze5292(1, 1)' + Ze5292(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(114) == DER83(2) * Ze5283(2, 2)' + Ze5283(2, 2) * DER83(2)' + DER88(2) * Ze5288(2, 2)' + Ze5288(2, 2) * DER88(2)' + DER90(2) * Ze5290(2, 2)' + Ze5290(2, 2) * DER90(2)' + DER92(2) * Ze5292(2, 2)' + Ze5292(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(115) ==DER83(3) * Ze5283(3, 3)' + Ze5283(3, 3) * DER83(3)' + DER88(3) * Ze5288(3, 3)' + Ze5288(3, 3) * DER88(3)' + DER90(3) * Ze5290(3, 3)' + Ze5290(3, 3) * DER90(3)' + DER92(3) * Ze5292(3, 3)' + Ze5292(3, 3) * DER92(3)' + 0];

Ze7283 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Ze7288 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8788 + 0;
Ze7290 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze7292 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(158) == DER83(1) * Ze7283(1, 1)' + Ze7283(1, 1) * DER83(1)' + DER88(1) * Ze7288(1, 1)' + Ze7288(1, 1) * DER88(1)' + DER90(1) * Ze7290(1, 1)' + Ze7290(1, 1) * DER90(1)' + DER92(1) * Ze7292(1, 1)' + Ze7292(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(159) == DER83(2) * Ze7283(2, 2)' + Ze7283(2, 2) * DER83(2)' + DER88(2) * Ze7288(2, 2)' + Ze7288(2, 2) * DER88(2)' + DER90(2) * Ze7290(2, 2)' + Ze7290(2, 2) * DER90(2)' + DER92(2) * Ze7292(2, 2)' + Ze7292(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(160) ==DER83(3) * Ze7283(3, 3)' + Ze7283(3, 3) * DER83(3)' + DER88(3) * Ze7288(3, 3)' + Ze7288(3, 3) * DER88(3)' + DER90(3) * Ze7290(3, 3)' + Ze7290(3, 3) * DER90(3)' + DER92(3) * Ze7292(3, 3)' + Ze7292(3, 3) * DER92(3)' + 0];

Ze8083 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Cons = [Cons, DeltaV(185) == DER83(1) * Ze8083(1, 1)' + Ze8083(1, 1) * DER83(1)' + 0];
Cons = [Cons, DeltaV(186) == DER83(2) * Ze8083(2, 2)' + Ze8083(2, 2) * DER83(2)' + 0];
Cons = [Cons, DeltaV(187) ==DER83(3) * Ze8083(3, 3)' + Ze8083(3, 3) * DER83(3)' + 0];

Ze883 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Ze888 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8788 + 0;
Ze890 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze892 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(21) == DER83(1) * Ze883(1, 1)' + Ze883(1, 1) * DER83(1)' + DER88(1) * Ze888(1, 1)' + Ze888(1, 1) * DER88(1)' + DER90(1) * Ze890(1, 1)' + Ze890(1, 1) * DER90(1)' + DER92(1) * Ze892(1, 1)' + Ze892(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(22) == DER83(2) * Ze883(2, 2)' + Ze883(2, 2) * DER83(2)' + DER88(2) * Ze888(2, 2)' + Ze888(2, 2) * DER88(2)' + DER90(2) * Ze890(2, 2)' + Ze890(2, 2) * DER90(2)' + DER92(2) * Ze892(2, 2)' + Ze892(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(23) ==DER83(3) * Ze883(3, 3)' + Ze883(3, 3) * DER83(3)' + DER88(3) * Ze888(3, 3)' + Ze888(3, 3) * DER88(3)' + DER90(3) * Ze890(3, 3)' + Ze890(3, 3) * DER90(3)' + DER92(3) * Ze892(3, 3)' + Ze892(3, 3) * DER92(3)' + 0];

Ze8788 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8788 + 0;
Ze8790 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze8792 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(199) == DER88(1) * Ze8788(1, 1)' + Ze8788(1, 1) * DER88(1)' + DER90(1) * Ze8790(1, 1)' + Ze8790(1, 1) * DER90(1)' + DER92(1) * Ze8792(1, 1)' + Ze8792(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(200) == DER88(2) * Ze8788(2, 2)' + Ze8788(2, 2) * DER88(2)' + DER90(2) * Ze8790(2, 2)' + Ze8790(2, 2) * DER90(2)' + DER92(2) * Ze8792(2, 2)' + Ze8792(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(201) ==DER88(3) * Ze8788(3, 3)' + Ze8788(3, 3) * DER88(3)' + DER90(3) * Ze8790(3, 3)' + Ze8790(3, 3) * DER90(3)' + DER92(3) * Ze8792(3, 3)' + Ze8792(3, 3) * DER92(3)' + 0];

Ze783 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Ze788 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8788 + 0;
Ze790 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze792 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(15) == DER83(1) * Ze783(1, 1)' + Ze783(1, 1) * DER83(1)' + DER88(1) * Ze788(1, 1)' + Ze788(1, 1) * DER88(1)' + DER90(1) * Ze790(1, 1)' + Ze790(1, 1) * DER90(1)' + DER92(1) * Ze792(1, 1)' + Ze792(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(16) == DER83(2) * Ze783(2, 2)' + Ze783(2, 2) * DER83(2)' + DER88(2) * Ze788(2, 2)' + Ze788(2, 2) * DER88(2)' + DER90(2) * Ze790(2, 2)' + Ze790(2, 2) * DER90(2)' + DER92(2) * Ze792(2, 2)' + Ze792(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(17) ==DER83(3) * Ze783(3, 3)' + Ze783(3, 3) * DER83(3)' + DER88(3) * Ze788(3, 3)' + Ze788(3, 3) * DER88(3)' + DER90(3) * Ze790(3, 3)' + Ze790(3, 3) * DER90(3)' + DER92(3) * Ze792(3, 3)' + Ze792(3, 3) * DER92(3)' + 0];

Ze5483 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7677 + Ze7778 + Ze7880 + Ze8081 + Ze8182 + Ze8283 + 0;
Ze5488 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8788 + 0;
Ze5490 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8990 + 0;
Ze5492 = Ze150150R + Ze150R149 + Ze1491 + Ze17 + Ze78 + Ze813 + Ze13152 + Ze15252 + Ze5253 + Ze5354 + Ze5457 + Ze5760 + Ze60160 + Ze160160R + Ze160R67 + Ze6772 + Ze7276 + Ze7686 + Ze8687 + Ze8789 + Ze8991 + Ze9192 + 0;
Cons = [Cons, DeltaV(119) == DER83(1) * Ze5483(1, 1)' + Ze5483(1, 1) * DER83(1)' + DER88(1) * Ze5488(1, 1)' + Ze5488(1, 1) * DER88(1)' + DER90(1) * Ze5490(1, 1)' + Ze5490(1, 1) * DER90(1)' + DER92(1) * Ze5492(1, 1)' + Ze5492(1, 1) * DER92(1)' + 0];
Cons = [Cons, DeltaV(120) == DER83(2) * Ze5483(2, 2)' + Ze5483(2, 2) * DER83(2)' + DER88(2) * Ze5488(2, 2)' + Ze5488(2, 2) * DER88(2)' + DER90(2) * Ze5490(2, 2)' + Ze5490(2, 2) * DER90(2)' + DER92(2) * Ze5492(2, 2)' + Ze5492(2, 2) * DER92(2)' + 0];
Cons = [Cons, DeltaV(121) ==DER83(3) * Ze5483(3, 3)' + Ze5483(3, 3) * DER83(3)' + DER88(3) * Ze5488(3, 3)' + Ze5488(3, 3) * DER88(3)' + DER90(3) * Ze5490(3, 3)' + Ze5490(3, 3) * DER90(3)' + DER92(3) * Ze5492(3, 3)' + Ze5492(3, 3) * DER92(3)' + 0];

Cons = [Cons, v_lb <= vPF + DeltaV <= v_ub];




options = sdpsettings('verbose',1,'solver','sedumi');
sol = optimize(Cons,Objective,options);





% voltage square variables
v2 = value(v2);
v3 = value(v3);
v7 = value(v7);
v4 = value(v4);
v5 = value(v5);
v6 = value(v6);
v8 = value(v8);
v12 = value(v12);
v9 = value(v9);
v13 = value(v13);
v14 = value(v14);
v34 = value(v34);
v18 = value(v18);
v11 = value(v11);
v10 = value(v10);
v16 = value(v16);
v17 = value(v17);
v19 = value(v19);
v21 = value(v21);
v20 = value(v20);
v22 = value(v22);
v23 = value(v23);
v24 = value(v24);
v25 = value(v25);
v26 = value(v26);
v28 = value(v28);
v27 = value(v27);
v31 = value(v31);
v33 = value(v33);
v29 = value(v29);
v30 = value(v30);
v250 = value(v250);
v32 = value(v32);
v15 = value(v15);
v36 = value(v36);
v40 = value(v40);
v37 = value(v37);
v38 = value(v38);
v39 = value(v39);
v41 = value(v41);
v42 = value(v42);
v43 = value(v43);
v44 = value(v44);
v45 = value(v45);
v47 = value(v47);
v46 = value(v46);
v48 = value(v48);
v49 = value(v49);
v50 = value(v50);
v51 = value(v51);
v53 = value(v53);
v54 = value(v54);
v55 = value(v55);
v57 = value(v57);
v56 = value(v56);
v58 = value(v58);
v60 = value(v60);
v59 = value(v59);
v61 = value(v61);
v62 = value(v62);
v63 = value(v63);
v64 = value(v64);
v65 = value(v65);
v66 = value(v66);
v68 = value(v68);
v72 = value(v72);
v97 = value(v97);
v69 = value(v69);
v70 = value(v70);
v71 = value(v71);
v73 = value(v73);
v76 = value(v76);
v74 = value(v74);
v75 = value(v75);
v77 = value(v77);
v86 = value(v86);
v78 = value(v78);
v79 = value(v79);
v80 = value(v80);
v81 = value(v81);
v82 = value(v82);
v84 = value(v84);
v83 = value(v83);
v85 = value(v85);
v87 = value(v87);
v88 = value(v88);
v89 = value(v89);
v90 = value(v90);
v91 = value(v91);
v92 = value(v92);
v93 = value(v93);
v94 = value(v94);
v95 = value(v95);
v96 = value(v96);
v98 = value(v98);
v99 = value(v99);
v100 = value(v100);
v450 = value(v450);
v102 = value(v102);
v105 = value(v105);
v103 = value(v103);
v104 = value(v104);
v106 = value(v106);
v108 = value(v108);
v107 = value(v107);
v109 = value(v109);
v300 = value(v300);
v110 = value(v110);
v111 = value(v111);
v112 = value(v112);
v113 = value(v113);
v114 = value(v114);
v35 = value(v35);
v1 = value(v1);
v52 = value(v52);
v67 = value(v67);
v101 = value(v101);
v151 = value(v151);
v150R = value(v150R);
v9R = value(v9R);
v25R = value(v25R);
v160R = value(v160R);
v610 = value(v610);
v149 = value(v149);
v152 = value(v152);
v135 = value(v135);
v160 = value(v160);
v197 = value(v197);
v61S = value(v61S);
v300_OPEN = value(v300_OPEN);
v94_OPEN = value(v94_OPEN);
v150 = value(v150);

% complex power variables
S12 = value(S12);
S13 = value(S13);
S17 = value(S17);
S34 = value(S34);
S35 = value(S35);
S56 = value(S56);
S78 = value(S78);
S812 = value(S812);
S89 = value(S89);
S813 = value(S813);
S9R14 = value(S9R14);
S1334 = value(S1334);
S1318 = value(S1318);
S1411 = value(S1411);
S1410 = value(S1410);
S1516 = value(S1516);
S1517 = value(S1517);
S1819 = value(S1819);
S1821 = value(S1821);
S1920 = value(S1920);
S2122 = value(S2122);
S2123 = value(S2123);
S2324 = value(S2324);
S2325 = value(S2325);
S25R26 = value(S25R26);
S2528 = value(S2528);
S2627 = value(S2627);
S2631 = value(S2631);
S2733 = value(S2733);
S2829 = value(S2829);
S2930 = value(S2930);
S30250 = value(S30250);
S3132 = value(S3132);
S3415 = value(S3415);
S3536 = value(S3536);
S3540 = value(S3540);
S3637 = value(S3637);
S3638 = value(S3638);
S3839 = value(S3839);
S4041 = value(S4041);
S4042 = value(S4042);
S4243 = value(S4243);
S4244 = value(S4244);
S4445 = value(S4445);
S4447 = value(S4447);
S4546 = value(S4546);
S4748 = value(S4748);
S4749 = value(S4749);
S4950 = value(S4950);
S5051 = value(S5051);
S5253 = value(S5253);
S5354 = value(S5354);
S5455 = value(S5455);
S5457 = value(S5457);
S5556 = value(S5556);
S5758 = value(S5758);
S5760 = value(S5760);
S5859 = value(S5859);
S6061 = value(S6061);
S6062 = value(S6062);
S6263 = value(S6263);
S6364 = value(S6364);
S6465 = value(S6465);
S6566 = value(S6566);
S6768 = value(S6768);
S6772 = value(S6772);
S6797 = value(S6797);
S6869 = value(S6869);
S6970 = value(S6970);
S7071 = value(S7071);
S7273 = value(S7273);
S7276 = value(S7276);
S7374 = value(S7374);
S7475 = value(S7475);
S7677 = value(S7677);
S7686 = value(S7686);
S7778 = value(S7778);
S7879 = value(S7879);
S7880 = value(S7880);
S8081 = value(S8081);
S8182 = value(S8182);
S8184 = value(S8184);
S8283 = value(S8283);
S8485 = value(S8485);
S8687 = value(S8687);
S8788 = value(S8788);
S8789 = value(S8789);
S8990 = value(S8990);
S8991 = value(S8991);
S9192 = value(S9192);
S9193 = value(S9193);
S9394 = value(S9394);
S9395 = value(S9395);
S9596 = value(S9596);
S9798 = value(S9798);
S9899 = value(S9899);
S99100 = value(S99100);
S100450 = value(S100450);
S101102 = value(S101102);
S101105 = value(S101105);
S102103 = value(S102103);
S103104 = value(S103104);
S105106 = value(S105106);
S105108 = value(S105108);
S106107 = value(S106107);
S108109 = value(S108109);
S108300 = value(S108300);
S109110 = value(S109110);
S110111 = value(S110111);
S110112 = value(S110112);
S112113 = value(S112113);
S113114 = value(S113114);
S13535 = value(S13535);
S1491 = value(S1491);
S15252 = value(S15252);
S160R67 = value(S160R67);
S197101 = value(S197101);
S51151 = value(S51151);
S150150R = value(S150150R);
S99R = value(S99R);
S2525R = value(S2525R);
S160160R = value(S160160R);
S61S610 = value(S61S610);
S150R149 = value(S150R149);
S13152 = value(S13152);
S18135 = value(S18135);
S60160 = value(S60160);
S97197 = value(S97197);
S6161S = value(S6161S);
S151300_OPEN = value(S151300_OPEN);
S5494_OPEN = value(S5494_OPEN);

% current square variables
l12 = value(l12);
l13 = value(l13);
l17 = value(l17);
l34 = value(l34);
l35 = value(l35);
l56 = value(l56);
l78 = value(l78);
l812 = value(l812);
l89 = value(l89);
l813 = value(l813);
l9R14 = value(l9R14);
l1334 = value(l1334);
l1318 = value(l1318);
l1411 = value(l1411);
l1410 = value(l1410);
l1516 = value(l1516);
l1517 = value(l1517);
l1819 = value(l1819);
l1821 = value(l1821);
l1920 = value(l1920);
l2122 = value(l2122);
l2123 = value(l2123);
l2324 = value(l2324);
l2325 = value(l2325);
l25R26 = value(l25R26);
l2528 = value(l2528);
l2627 = value(l2627);
l2631 = value(l2631);
l2733 = value(l2733);
l2829 = value(l2829);
l2930 = value(l2930);
l30250 = value(l30250);
l3132 = value(l3132);
l3415 = value(l3415);
l3536 = value(l3536);
l3540 = value(l3540);
l3637 = value(l3637);
l3638 = value(l3638);
l3839 = value(l3839);
l4041 = value(l4041);
l4042 = value(l4042);
l4243 = value(l4243);
l4244 = value(l4244);
l4445 = value(l4445);
l4447 = value(l4447);
l4546 = value(l4546);
l4748 = value(l4748);
l4749 = value(l4749);
l4950 = value(l4950);
l5051 = value(l5051);
l5253 = value(l5253);
l5354 = value(l5354);
l5455 = value(l5455);
l5457 = value(l5457);
l5556 = value(l5556);
l5758 = value(l5758);
l5760 = value(l5760);
l5859 = value(l5859);
l6061 = value(l6061);
l6062 = value(l6062);
l6263 = value(l6263);
l6364 = value(l6364);
l6465 = value(l6465);
l6566 = value(l6566);
l6768 = value(l6768);
l6772 = value(l6772);
l6797 = value(l6797);
l6869 = value(l6869);
l6970 = value(l6970);
l7071 = value(l7071);
l7273 = value(l7273);
l7276 = value(l7276);
l7374 = value(l7374);
l7475 = value(l7475);
l7677 = value(l7677);
l7686 = value(l7686);
l7778 = value(l7778);
l7879 = value(l7879);
l7880 = value(l7880);
l8081 = value(l8081);
l8182 = value(l8182);
l8184 = value(l8184);
l8283 = value(l8283);
l8485 = value(l8485);
l8687 = value(l8687);
l8788 = value(l8788);
l8789 = value(l8789);
l8990 = value(l8990);
l8991 = value(l8991);
l9192 = value(l9192);
l9193 = value(l9193);
l9394 = value(l9394);
l9395 = value(l9395);
l9596 = value(l9596);
l9798 = value(l9798);
l9899 = value(l9899);
l99100 = value(l99100);
l100450 = value(l100450);
l101102 = value(l101102);
l101105 = value(l101105);
l102103 = value(l102103);
l103104 = value(l103104);
l105106 = value(l105106);
l105108 = value(l105108);
l106107 = value(l106107);
l108109 = value(l108109);
l108300 = value(l108300);
l109110 = value(l109110);
l110111 = value(l110111);
l110112 = value(l110112);
l112113 = value(l112113);
l113114 = value(l113114);
l13535 = value(l13535);
l1491 = value(l1491);
l15252 = value(l15252);
l160R67 = value(l160R67);
l197101 = value(l197101);
l51151 = value(l51151);
l150150R = value(l150150R);
l99R = value(l99R);
l2525R = value(l2525R);
l160160R = value(l160160R);
l61S610 = value(l61S610);
l150R149 = value(l150R149);
l13152 = value(l13152);
l18135 = value(l18135);
l60160 = value(l60160);
l97197 = value(l97197);
l6161S = value(l6161S);
l151300_OPEN = value(l151300_OPEN);
l5494_OPEN = value(l5494_OPEN);


V150= v0;
I150150R = 1/trace(v150([1, 2, 3],[1, 2, 3]))*ctranspose(S150150R)*V150([1, 2, 3]);
V150R = (V150([1, 2, 3]) - Z150150R*I150150R) .* alpha150R;
I150R149 = 1/trace(v150R([1, 2, 3],[1, 2, 3]))*ctranspose(S150R149)*V150R([1, 2, 3]);
V149 = V150R([1, 2, 3]) - Z150R149*I150R149;
I1491 = 1/trace(v149([1, 2, 3],[1, 2, 3]))*ctranspose(S1491)*V149([1, 2, 3]);
V1 = V149([1, 2, 3]) - Z1491*I1491;
I12 = 1/trace(v1([2],[2]))*ctranspose(S12)*V1([2]);
V2 = V1([2]) - Z12*I12;
I13 = 1/trace(v1([3],[3]))*ctranspose(S13)*V1([3]);
V3 = V1([3]) - Z13*I13;
I17 = 1/trace(v1([1, 2, 3],[1, 2, 3]))*ctranspose(S17)*V1([1, 2, 3]);
V7 = V1([1, 2, 3]) - Z17*I17;
I34 = 1/trace(v3([1],[1]))*ctranspose(S34)*V3([1]);
V4 = V3([1]) - Z34*I34;
I35 = 1/trace(v3([1],[1]))*ctranspose(S35)*V3([1]);
V5 = V3([1]) - Z35*I35;
I78 = 1/trace(v7([1, 2, 3],[1, 2, 3]))*ctranspose(S78)*V7([1, 2, 3]);
V8 = V7([1, 2, 3]) - Z78*I78;
I56 = 1/trace(v5([1],[1]))*ctranspose(S56)*V5([1]);
V6 = V5([1]) - Z56*I56;
I812 = 1/trace(v8([2],[2]))*ctranspose(S812)*V8([2]);
V12 = V8([2]) - Z812*I812;
I89 = 1/trace(v8([1],[1]))*ctranspose(S89)*V8([1]);
V9 = V8([1]) - Z89*I89;
I813 = 1/trace(v8([1, 2, 3],[1, 2, 3]))*ctranspose(S813)*V8([1, 2, 3]);
V13 = V8([1, 2, 3]) - Z813*I813;
I99R = 1/trace(v9([1],[1]))*ctranspose(S99R)*V9([1]);
V9R = (V9([1]) - Z99R*I99R) .* alpha9R;
I1334 = 1/trace(v13([3],[3]))*ctranspose(S1334)*V13([3]);
V34 = V13([3]) - Z1334*I1334;
I1318 = 1/trace(v13([1, 2, 3],[1, 2, 3]))*ctranspose(S1318)*V13([1, 2, 3]);
V18 = V13([1, 2, 3]) - Z1318*I1318;
I13152 = 1/trace(v13([1, 2, 3],[1, 2, 3]))*ctranspose(S13152)*V13([1, 2, 3]);
V152 = V13([1, 2, 3]) - Z13152*I13152;
I9R14 = 1/trace(v9R([1],[1]))*ctranspose(S9R14)*V9R([1]);
V14 = V9R([1]) - Z9R14*I9R14;
I3415 = 1/trace(v34([1],[1]))*ctranspose(S3415)*V34([1]);
V15 = V34([1]) - Z3415*I3415;
I1819 = 1/trace(v18([1],[1]))*ctranspose(S1819)*V18([1]);
V19 = V18([1]) - Z1819*I1819;
I1821 = 1/trace(v18([1, 2, 3],[1, 2, 3]))*ctranspose(S1821)*V18([1, 2, 3]);
V21 = V18([1, 2, 3]) - Z1821*I1821;
I18135 = 1/trace(v18([1, 2, 3],[1, 2, 3]))*ctranspose(S18135)*V18([1, 2, 3]);
V135 = V18([1, 2, 3]) - Z18135*I18135;
I15252 = 1/trace(v152([1, 2, 3],[1, 2, 3]))*ctranspose(S15252)*V152([1, 2, 3]);
V52 = V152([1, 2, 3]) - Z15252*I15252;
I1411 = 1/trace(v14([1],[1]))*ctranspose(S1411)*V14([1]);
V11 = V14([1]) - Z1411*I1411;
I1410 = 1/trace(v14([1],[1]))*ctranspose(S1410)*V14([1]);
V10 = V14([1]) - Z1410*I1410;
I1516 = 1/trace(v15([1],[1]))*ctranspose(S1516)*V15([1]);
V16 = V15([1]) - Z1516*I1516;
I1517 = 1/trace(v15([1],[1]))*ctranspose(S1517)*V15([1]);
V17 = V15([1]) - Z1517*I1517;
I1920 = 1/trace(v19([1],[1]))*ctranspose(S1920)*V19([1]);
V20 = V19([1]) - Z1920*I1920;
I2122 = 1/trace(v21([2],[2]))*ctranspose(S2122)*V21([2]);
V22 = V21([2]) - Z2122*I2122;
I2123 = 1/trace(v21([1, 2, 3],[1, 2, 3]))*ctranspose(S2123)*V21([1, 2, 3]);
V23 = V21([1, 2, 3]) - Z2123*I2123;
I13535 = 1/trace(v135([1, 2, 3],[1, 2, 3]))*ctranspose(S13535)*V135([1, 2, 3]);
V35 = V135([1, 2, 3]) - Z13535*I13535;
I5253 = 1/trace(v52([1, 2, 3],[1, 2, 3]))*ctranspose(S5253)*V52([1, 2, 3]);
V53 = V52([1, 2, 3]) - Z5253*I5253;
I2324 = 1/trace(v23([3],[3]))*ctranspose(S2324)*V23([3]);
V24 = V23([3]) - Z2324*I2324;
I2325 = 1/trace(v23([1, 2, 3],[1, 2, 3]))*ctranspose(S2325)*V23([1, 2, 3]);
V25 = V23([1, 2, 3]) - Z2325*I2325;
I3536 = 1/trace(v35([1, 2],[1, 2]))*ctranspose(S3536)*V35([1, 2]);
V36 = V35([1, 2]) - Z3536*I3536;
I3540 = 1/trace(v35([1, 2, 3],[1, 2, 3]))*ctranspose(S3540)*V35([1, 2, 3]);
V40 = V35([1, 2, 3]) - Z3540*I3540;
I5354 = 1/trace(v53([1, 2, 3],[1, 2, 3]))*ctranspose(S5354)*V53([1, 2, 3]);
V54 = V53([1, 2, 3]) - Z5354*I5354;
I2528 = 1/trace(v25([1, 2, 3],[1, 2, 3]))*ctranspose(S2528)*V25([1, 2, 3]);
V28 = V25([1, 2, 3]) - Z2528*I2528;
I2525R = 1/trace(v25([1, 3],[1, 3]))*ctranspose(S2525R)*V25([1, 3]);
V25R = (V25([1, 3]) - Z2525R*I2525R) .* alpha25R;
I3637 = 1/trace(v36([1],[1]))*ctranspose(S3637)*V36([1]);
V37 = V36([1]) - Z3637*I3637;
I3638 = 1/trace(v36([2],[2]))*ctranspose(S3638)*V36([2]);
V38 = V36([2]) - Z3638*I3638;
I4041 = 1/trace(v40([3],[3]))*ctranspose(S4041)*V40([3]);
V41 = V40([3]) - Z4041*I4041;
I4042 = 1/trace(v40([1, 2, 3],[1, 2, 3]))*ctranspose(S4042)*V40([1, 2, 3]);
V42 = V40([1, 2, 3]) - Z4042*I4042;
I5455 = 1/trace(v54([1, 2, 3],[1, 2, 3]))*ctranspose(S5455)*V54([1, 2, 3]);
V55 = V54([1, 2, 3]) - Z5455*I5455;
I5457 = 1/trace(v54([1, 2, 3],[1, 2, 3]))*ctranspose(S5457)*V54([1, 2, 3]);
V57 = V54([1, 2, 3]) - Z5457*I5457;
I5494_OPEN = 1/trace(v54([1],[1]))*ctranspose(S5494_OPEN)*V54([1]);
V94_OPEN = V54([1]) - Z5494_OPEN*I5494_OPEN;
I2829 = 1/trace(v28([1, 2, 3],[1, 2, 3]))*ctranspose(S2829)*V28([1, 2, 3]);
V29 = V28([1, 2, 3]) - Z2829*I2829;
I25R26 = 1/trace(v25R([1, 2],[1, 2]))*ctranspose(S25R26)*V25R([1, 2]);
V26 = V25R([1, 2]) - Z25R26*I25R26;
I3839 = 1/trace(v38([1],[1]))*ctranspose(S3839)*V38([1]);
V39 = V38([1]) - Z3839*I3839;
I4243 = 1/trace(v42([2],[2]))*ctranspose(S4243)*V42([2]);
V43 = V42([2]) - Z4243*I4243;
I4244 = 1/trace(v42([1, 2, 3],[1, 2, 3]))*ctranspose(S4244)*V42([1, 2, 3]);
V44 = V42([1, 2, 3]) - Z4244*I4244;
I5556 = 1/trace(v55([1, 2, 3],[1, 2, 3]))*ctranspose(S5556)*V55([1, 2, 3]);
V56 = V55([1, 2, 3]) - Z5556*I5556;
I5758 = 1/trace(v57([2],[2]))*ctranspose(S5758)*V57([2]);
V58 = V57([2]) - Z5758*I5758;
I5760 = 1/trace(v57([1, 2, 3],[1, 2, 3]))*ctranspose(S5760)*V57([1, 2, 3]);
V60 = V57([1, 2, 3]) - Z5760*I5760;
I2930 = 1/trace(v29([1, 2, 3],[1, 2, 3]))*ctranspose(S2930)*V29([1, 2, 3]);
V30 = V29([1, 2, 3]) - Z2930*I2930;
I2627 = 1/trace(v26([1, 2],[1, 2]))*ctranspose(S2627)*V26([1, 2]);
V27 = V26([1, 2]) - Z2627*I2627;
I2631 = 1/trace(v26([2],[2]))*ctranspose(S2631)*V26([2]);
V31 = V26([2]) - Z2631*I2631;
I4445 = 1/trace(v44([1],[1]))*ctranspose(S4445)*V44([1]);
V45 = V44([1]) - Z4445*I4445;
I4447 = 1/trace(v44([1, 2, 3],[1, 2, 3]))*ctranspose(S4447)*V44([1, 2, 3]);
V47 = V44([1, 2, 3]) - Z4447*I4447;
I5859 = 1/trace(v58([1],[1]))*ctranspose(S5859)*V58([1]);
V59 = V58([1]) - Z5859*I5859;
I6061 = 1/trace(v60([1, 2, 3],[1, 2, 3]))*ctranspose(S6061)*V60([1, 2, 3]);
V61 = V60([1, 2, 3]) - Z6061*I6061;
I6062 = 1/trace(v60([1, 2, 3],[1, 2, 3]))*ctranspose(S6062)*V60([1, 2, 3]);
V62 = V60([1, 2, 3]) - Z6062*I6062;
I60160 = 1/trace(v60([1, 2, 3],[1, 2, 3]))*ctranspose(S60160)*V60([1, 2, 3]);
V160 = V60([1, 2, 3]) - Z60160*I60160;
I30250 = 1/trace(v30([1, 2, 3],[1, 2, 3]))*ctranspose(S30250)*V30([1, 2, 3]);
V250 = V30([1, 2, 3]) - Z30250*I30250;
I2733 = 1/trace(v27([1],[1]))*ctranspose(S2733)*V27([1]);
V33 = V27([1]) - Z2733*I2733;
I3132 = 1/trace(v31([1],[1]))*ctranspose(S3132)*V31([1]);
V32 = V31([1]) - Z3132*I3132;
I4546 = 1/trace(v45([1],[1]))*ctranspose(S4546)*V45([1]);
V46 = V45([1]) - Z4546*I4546;
I4748 = 1/trace(v47([1, 2, 3],[1, 2, 3]))*ctranspose(S4748)*V47([1, 2, 3]);
V48 = V47([1, 2, 3]) - Z4748*I4748;
I4749 = 1/trace(v47([1, 2, 3],[1, 2, 3]))*ctranspose(S4749)*V47([1, 2, 3]);
V49 = V47([1, 2, 3]) - Z4749*I4749;
I6161S = 1/trace(v61([1, 2, 3],[1, 2, 3]))*ctranspose(S6161S)*V61([1, 2, 3]);
V61S = V61([1, 2, 3]) - Z6161S*I6161S;
I6263 = 1/trace(v62([1, 2, 3],[1, 2, 3]))*ctranspose(S6263)*V62([1, 2, 3]);
V63 = V62([1, 2, 3]) - Z6263*I6263;
I160160R = 1/trace(v160([1, 2, 3],[1, 2, 3]))*ctranspose(S160160R)*V160([1, 2, 3]);
V160R = (V160([1, 2, 3]) - Z160160R*I160160R) .* alpha160R;
I4950 = 1/trace(v49([1, 2, 3],[1, 2, 3]))*ctranspose(S4950)*V49([1, 2, 3]);
V50 = V49([1, 2, 3]) - Z4950*I4950;
I61S610 = 1/trace(v61S([1, 2, 3],[1, 2, 3]))*ctranspose(S61S610)*V61S([1, 2, 3]);
V610 = V61S([1, 2, 3]) - Z61S610*I61S610;
I6364 = 1/trace(v63([1, 2, 3],[1, 2, 3]))*ctranspose(S6364)*V63([1, 2, 3]);
V64 = V63([1, 2, 3]) - Z6364*I6364;
I160R67 = 1/trace(v160R([1, 2, 3],[1, 2, 3]))*ctranspose(S160R67)*V160R([1, 2, 3]);
V67 = V160R([1, 2, 3]) - Z160R67*I160R67;
I5051 = 1/trace(v50([1, 2, 3],[1, 2, 3]))*ctranspose(S5051)*V50([1, 2, 3]);
V51 = V50([1, 2, 3]) - Z5051*I5051;
I6465 = 1/trace(v64([1, 2, 3],[1, 2, 3]))*ctranspose(S6465)*V64([1, 2, 3]);
V65 = V64([1, 2, 3]) - Z6465*I6465;
I6768 = 1/trace(v67([1],[1]))*ctranspose(S6768)*V67([1]);
V68 = V67([1]) - Z6768*I6768;
I6772 = 1/trace(v67([1, 2, 3],[1, 2, 3]))*ctranspose(S6772)*V67([1, 2, 3]);
V72 = V67([1, 2, 3]) - Z6772*I6772;
I6797 = 1/trace(v67([1, 2, 3],[1, 2, 3]))*ctranspose(S6797)*V67([1, 2, 3]);
V97 = V67([1, 2, 3]) - Z6797*I6797;
I51151 = 1/trace(v51([1, 2, 3],[1, 2, 3]))*ctranspose(S51151)*V51([1, 2, 3]);
V151 = V51([1, 2, 3]) - Z51151*I51151;
I6566 = 1/trace(v65([1, 2, 3],[1, 2, 3]))*ctranspose(S6566)*V65([1, 2, 3]);
V66 = V65([1, 2, 3]) - Z6566*I6566;
I6869 = 1/trace(v68([1],[1]))*ctranspose(S6869)*V68([1]);
V69 = V68([1]) - Z6869*I6869;
I7273 = 1/trace(v72([3],[3]))*ctranspose(S7273)*V72([3]);
V73 = V72([3]) - Z7273*I7273;
I7276 = 1/trace(v72([1, 2, 3],[1, 2, 3]))*ctranspose(S7276)*V72([1, 2, 3]);
V76 = V72([1, 2, 3]) - Z7276*I7276;
I9798 = 1/trace(v97([1, 2, 3],[1, 2, 3]))*ctranspose(S9798)*V97([1, 2, 3]);
V98 = V97([1, 2, 3]) - Z9798*I9798;
I97197 = 1/trace(v97([1, 2, 3],[1, 2, 3]))*ctranspose(S97197)*V97([1, 2, 3]);
V197 = V97([1, 2, 3]) - Z97197*I97197;
I151300_OPEN = 1/trace(v151([1, 2, 3],[1, 2, 3]))*ctranspose(S151300_OPEN)*V151([1, 2, 3]);
V300_OPEN = V151([1, 2, 3]) - Z151300_OPEN*I151300_OPEN;
I6970 = 1/trace(v69([1],[1]))*ctranspose(S6970)*V69([1]);
V70 = V69([1]) - Z6970*I6970;
I7374 = 1/trace(v73([1],[1]))*ctranspose(S7374)*V73([1]);
V74 = V73([1]) - Z7374*I7374;
I7677 = 1/trace(v76([1, 2, 3],[1, 2, 3]))*ctranspose(S7677)*V76([1, 2, 3]);
V77 = V76([1, 2, 3]) - Z7677*I7677;
I7686 = 1/trace(v76([1, 2, 3],[1, 2, 3]))*ctranspose(S7686)*V76([1, 2, 3]);
V86 = V76([1, 2, 3]) - Z7686*I7686;
I9899 = 1/trace(v98([1, 2, 3],[1, 2, 3]))*ctranspose(S9899)*V98([1, 2, 3]);
V99 = V98([1, 2, 3]) - Z9899*I9899;
I197101 = 1/trace(v197([1, 2, 3],[1, 2, 3]))*ctranspose(S197101)*V197([1, 2, 3]);
V101 = V197([1, 2, 3]) - Z197101*I197101;
I7071 = 1/trace(v70([1],[1]))*ctranspose(S7071)*V70([1]);
V71 = V70([1]) - Z7071*I7071;
I7475 = 1/trace(v74([1],[1]))*ctranspose(S7475)*V74([1]);
V75 = V74([1]) - Z7475*I7475;
I7778 = 1/trace(v77([1, 2, 3],[1, 2, 3]))*ctranspose(S7778)*V77([1, 2, 3]);
V78 = V77([1, 2, 3]) - Z7778*I7778;
I8687 = 1/trace(v86([1, 2, 3],[1, 2, 3]))*ctranspose(S8687)*V86([1, 2, 3]);
V87 = V86([1, 2, 3]) - Z8687*I8687;
I99100 = 1/trace(v99([1, 2, 3],[1, 2, 3]))*ctranspose(S99100)*V99([1, 2, 3]);
V100 = V99([1, 2, 3]) - Z99100*I99100;
I101102 = 1/trace(v101([3],[3]))*ctranspose(S101102)*V101([3]);
V102 = V101([3]) - Z101102*I101102;
I101105 = 1/trace(v101([1, 2, 3],[1, 2, 3]))*ctranspose(S101105)*V101([1, 2, 3]);
V105 = V101([1, 2, 3]) - Z101105*I101105;
I7879 = 1/trace(v78([1, 2, 3],[1, 2, 3]))*ctranspose(S7879)*V78([1, 2, 3]);
V79 = V78([1, 2, 3]) - Z7879*I7879;
I7880 = 1/trace(v78([1, 2, 3],[1, 2, 3]))*ctranspose(S7880)*V78([1, 2, 3]);
V80 = V78([1, 2, 3]) - Z7880*I7880;
I8788 = 1/trace(v87([1],[1]))*ctranspose(S8788)*V87([1]);
V88 = V87([1]) - Z8788*I8788;
I8789 = 1/trace(v87([1, 2, 3],[1, 2, 3]))*ctranspose(S8789)*V87([1, 2, 3]);
V89 = V87([1, 2, 3]) - Z8789*I8789;
I100450 = 1/trace(v100([1, 2, 3],[1, 2, 3]))*ctranspose(S100450)*V100([1, 2, 3]);
V450 = V100([1, 2, 3]) - Z100450*I100450;
I102103 = 1/trace(v102([1],[1]))*ctranspose(S102103)*V102([1]);
V103 = V102([1]) - Z102103*I102103;
I105106 = 1/trace(v105([2],[2]))*ctranspose(S105106)*V105([2]);
V106 = V105([2]) - Z105106*I105106;
I105108 = 1/trace(v105([1, 2, 3],[1, 2, 3]))*ctranspose(S105108)*V105([1, 2, 3]);
V108 = V105([1, 2, 3]) - Z105108*I105108;
I8081 = 1/trace(v80([1, 2, 3],[1, 2, 3]))*ctranspose(S8081)*V80([1, 2, 3]);
V81 = V80([1, 2, 3]) - Z8081*I8081;
I8990 = 1/trace(v89([2],[2]))*ctranspose(S8990)*V89([2]);
V90 = V89([2]) - Z8990*I8990;
I8991 = 1/trace(v89([1, 2, 3],[1, 2, 3]))*ctranspose(S8991)*V89([1, 2, 3]);
V91 = V89([1, 2, 3]) - Z8991*I8991;
I103104 = 1/trace(v103([1],[1]))*ctranspose(S103104)*V103([1]);
V104 = V103([1]) - Z103104*I103104;
I106107 = 1/trace(v106([1],[1]))*ctranspose(S106107)*V106([1]);
V107 = V106([1]) - Z106107*I106107;
I108109 = 1/trace(v108([1],[1]))*ctranspose(S108109)*V108([1]);
V109 = V108([1]) - Z108109*I108109;
I108300 = 1/trace(v108([1, 2, 3],[1, 2, 3]))*ctranspose(S108300)*V108([1, 2, 3]);
V300 = V108([1, 2, 3]) - Z108300*I108300;
I8182 = 1/trace(v81([1, 2, 3],[1, 2, 3]))*ctranspose(S8182)*V81([1, 2, 3]);
V82 = V81([1, 2, 3]) - Z8182*I8182;
I8184 = 1/trace(v81([3],[3]))*ctranspose(S8184)*V81([3]);
V84 = V81([3]) - Z8184*I8184;
I9192 = 1/trace(v91([3],[3]))*ctranspose(S9192)*V91([3]);
V92 = V91([3]) - Z9192*I9192;
I9193 = 1/trace(v91([1, 2, 3],[1, 2, 3]))*ctranspose(S9193)*V91([1, 2, 3]);
V93 = V91([1, 2, 3]) - Z9193*I9193;
I109110 = 1/trace(v109([1],[1]))*ctranspose(S109110)*V109([1]);
V110 = V109([1]) - Z109110*I109110;
I8283 = 1/trace(v82([1, 2, 3],[1, 2, 3]))*ctranspose(S8283)*V82([1, 2, 3]);
V83 = V82([1, 2, 3]) - Z8283*I8283;
I8485 = 1/trace(v84([1],[1]))*ctranspose(S8485)*V84([1]);
V85 = V84([1]) - Z8485*I8485;
I9394 = 1/trace(v93([1],[1]))*ctranspose(S9394)*V93([1]);
V94 = V93([1]) - Z9394*I9394;
I9395 = 1/trace(v93([1, 2, 3],[1, 2, 3]))*ctranspose(S9395)*V93([1, 2, 3]);
V95 = V93([1, 2, 3]) - Z9395*I9395;
I110111 = 1/trace(v110([1],[1]))*ctranspose(S110111)*V110([1]);
V111 = V110([1]) - Z110111*I110111;
I110112 = 1/trace(v110([1],[1]))*ctranspose(S110112)*V110([1]);
V112 = V110([1]) - Z110112*I110112;
I9596 = 1/trace(v95([2],[2]))*ctranspose(S9596)*V95([2]);
V96 = V95([2]) - Z9596*I9596;
I112113 = 1/trace(v112([1],[1]))*ctranspose(S112113)*V112([1]);
V113 = V112([1]) - Z112113*I112113;
I113114 = 1/trace(v113([1],[1]))*ctranspose(S113114)*V113([1]);
V114 = V113([1]) - Z113114*I113114;


phasors=[];
phasors=[phasors;recover_voltage(V150, 123)];
phasors=[phasors;recover_voltage(V150R, 123)];
phasors=[phasors;recover_voltage(V149, 123)];
phasors=[phasors;recover_voltage(V1, 123)];
phasors=[phasors;recover_voltage(V2, 2)];
phasors=[phasors;recover_voltage(V3, 3)];
phasors=[phasors;recover_voltage(V7, 123)];
phasors=[phasors;recover_voltage(V4, 3)];
phasors=[phasors;recover_voltage(V5, 3)];
phasors=[phasors;recover_voltage(V8, 123)];
phasors=[phasors;recover_voltage(V6, 3)];
phasors=[phasors;recover_voltage(V12, 2)];
phasors=[phasors;recover_voltage(V9, 1)];
phasors=[phasors;recover_voltage(V13, 123)];
phasors=[phasors;recover_voltage(V9R, 1)];
phasors=[phasors;recover_voltage(V34, 3)];
phasors=[phasors;recover_voltage(V18, 123)];
phasors=[phasors;recover_voltage(V152, 123)];
phasors=[phasors;recover_voltage(V14, 1)];
phasors=[phasors;recover_voltage(V15, 3)];
phasors=[phasors;recover_voltage(V19, 1)];
phasors=[phasors;recover_voltage(V21, 123)];
phasors=[phasors;recover_voltage(V135, 123)];
phasors=[phasors;recover_voltage(V52, 123)];
phasors=[phasors;recover_voltage(V11, 1)];
phasors=[phasors;recover_voltage(V10, 1)];
phasors=[phasors;recover_voltage(V16, 3)];
phasors=[phasors;recover_voltage(V17, 3)];
phasors=[phasors;recover_voltage(V20, 1)];
phasors=[phasors;recover_voltage(V22, 2)];
phasors=[phasors;recover_voltage(V23, 123)];
phasors=[phasors;recover_voltage(V35, 123)];
phasors=[phasors;recover_voltage(V53, 123)];
phasors=[phasors;recover_voltage(V24, 3)];
phasors=[phasors;recover_voltage(V25, 123)];
phasors=[phasors;recover_voltage(V36, 12)];
phasors=[phasors;recover_voltage(V40, 123)];
phasors=[phasors;recover_voltage(V54, 123)];
phasors=[phasors;recover_voltage(V28, 123)];
phasors=[phasors;recover_voltage(V25R, 13)];
phasors=[phasors;recover_voltage(V37, 1)];
phasors=[phasors;recover_voltage(V38, 2)];
phasors=[phasors;recover_voltage(V41, 3)];
phasors=[phasors;recover_voltage(V42, 123)];
phasors=[phasors;recover_voltage(V55, 123)];
phasors=[phasors;recover_voltage(V57, 123)];
phasors=[phasors;recover_voltage(V94_OPEN, 1)];
phasors=[phasors;recover_voltage(V29, 123)];
phasors=[phasors;recover_voltage(V26, 13)];
phasors=[phasors;recover_voltage(V39, 2)];
phasors=[phasors;recover_voltage(V43, 2)];
phasors=[phasors;recover_voltage(V44, 123)];
phasors=[phasors;recover_voltage(V56, 123)];
phasors=[phasors;recover_voltage(V58, 2)];
phasors=[phasors;recover_voltage(V60, 123)];
phasors=[phasors;recover_voltage(V30, 123)];
phasors=[phasors;recover_voltage(V27, 13)];
phasors=[phasors;recover_voltage(V31, 3)];
phasors=[phasors;recover_voltage(V45, 1)];
phasors=[phasors;recover_voltage(V47, 123)];
phasors=[phasors;recover_voltage(V59, 2)];
phasors=[phasors;recover_voltage(V61, 123)];
phasors=[phasors;recover_voltage(V62, 123)];
phasors=[phasors;recover_voltage(V160, 123)];
phasors=[phasors;recover_voltage(V250, 123)];
phasors=[phasors;recover_voltage(V33, 1)];
phasors=[phasors;recover_voltage(V32, 3)];
phasors=[phasors;recover_voltage(V46, 1)];
phasors=[phasors;recover_voltage(V48, 123)];
phasors=[phasors;recover_voltage(V49, 123)];
phasors=[phasors;recover_voltage(V61S, 123)];
phasors=[phasors;recover_voltage(V63, 123)];
phasors=[phasors;recover_voltage(V160R, 123)];
phasors=[phasors;recover_voltage(V50, 123)];
phasors=[phasors;recover_voltage(V610, 123)];
phasors=[phasors;recover_voltage(V64, 123)];
phasors=[phasors;recover_voltage(V67, 123)];
phasors=[phasors;recover_voltage(V51, 123)];
phasors=[phasors;recover_voltage(V65, 123)];
phasors=[phasors;recover_voltage(V68, 1)];
phasors=[phasors;recover_voltage(V72, 123)];
phasors=[phasors;recover_voltage(V97, 123)];
phasors=[phasors;recover_voltage(V151, 123)];
phasors=[phasors;recover_voltage(V66, 123)];
phasors=[phasors;recover_voltage(V69, 1)];
phasors=[phasors;recover_voltage(V73, 3)];
phasors=[phasors;recover_voltage(V76, 123)];
phasors=[phasors;recover_voltage(V98, 123)];
phasors=[phasors;recover_voltage(V197, 123)];
phasors=[phasors;recover_voltage(V300_OPEN, 123)];
phasors=[phasors;recover_voltage(V70, 1)];
phasors=[phasors;recover_voltage(V74, 3)];
phasors=[phasors;recover_voltage(V77, 123)];
phasors=[phasors;recover_voltage(V86, 123)];
phasors=[phasors;recover_voltage(V99, 123)];
phasors=[phasors;recover_voltage(V101, 123)];
phasors=[phasors;recover_voltage(V71, 1)];
phasors=[phasors;recover_voltage(V75, 3)];
phasors=[phasors;recover_voltage(V78, 123)];
phasors=[phasors;recover_voltage(V87, 123)];
phasors=[phasors;recover_voltage(V100, 123)];
phasors=[phasors;recover_voltage(V102, 3)];
phasors=[phasors;recover_voltage(V105, 123)];
phasors=[phasors;recover_voltage(V79, 123)];
phasors=[phasors;recover_voltage(V80, 123)];
phasors=[phasors;recover_voltage(V88, 1)];
phasors=[phasors;recover_voltage(V89, 123)];
phasors=[phasors;recover_voltage(V450, 123)];
phasors=[phasors;recover_voltage(V103, 3)];
phasors=[phasors;recover_voltage(V106, 2)];
phasors=[phasors;recover_voltage(V108, 123)];
phasors=[phasors;recover_voltage(V81, 123)];
phasors=[phasors;recover_voltage(V90, 2)];
phasors=[phasors;recover_voltage(V91, 123)];
phasors=[phasors;recover_voltage(V104, 3)];
phasors=[phasors;recover_voltage(V107, 2)];
phasors=[phasors;recover_voltage(V109, 1)];
phasors=[phasors;recover_voltage(V300, 123)];
phasors=[phasors;recover_voltage(V82, 123)];
phasors=[phasors;recover_voltage(V84, 3)];
phasors=[phasors;recover_voltage(V92, 3)];
phasors=[phasors;recover_voltage(V93, 123)];
phasors=[phasors;recover_voltage(V110, 1)];
phasors=[phasors;recover_voltage(V83, 123)];
phasors=[phasors;recover_voltage(V85, 3)];
phasors=[phasors;recover_voltage(V94, 1)];
phasors=[phasors;recover_voltage(V95, 123)];
phasors=[phasors;recover_voltage(V111, 1)];
phasors=[phasors;recover_voltage(V112, 1)];
phasors=[phasors;recover_voltage(V96, 2)];
phasors=[phasors;recover_voltage(V113, 1)];
phasors=[phasors;recover_voltage(V114, 1)];

% change to per unit
phasors(:, 1) = phasors(:, 1) / Vbase;
phasors(:, 3) = phasors(:, 3) / Vbase;
phasors(:, 5) = phasors(:, 5) / Vbase;

disp(diag(S150R149) / 1000)
disp(value(DER83) / 1000)
disp(value(DER88) / 1000)
disp(value(DER90) / 1000)
disp(value(DER92) / 1000)